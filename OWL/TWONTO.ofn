Prefix(:=<http://www.toronto.ca/TWONTO#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.toronto.ca/TWONTO>
<http://www.toronto.ca/TWONTO/0.1>

Declaration(Class(:AC_condenserUnit))
Declaration(Class(:AC_evaporatorUnit))
Declaration(Class(:ALWS))
Declaration(Class(:COCOA))
Declaration(Class(:CSA-B149-6_membraneGasholder))
Declaration(Class(:LinearSegmentAsset))
Declaration(Class(:MaterialStorageOrSurgeSuppressionAsset))
Declaration(Class(:NavTree_001))
Declaration(Class(:NavTree_002))
Declaration(Class(:NavTree_003))
Declaration(Class(:NavTree_004))
Declaration(Class(:NavTree_005))
Declaration(Class(:NavTree_006))
Declaration(Class(:NavTree_007))
Declaration(Class(:NavTree_008))
Declaration(Class(:NavTree_009))
Declaration(Class(:NavTree_010))
Declaration(Class(:NavTree_011))
Declaration(Class(:NavTree_012))
Declaration(Class(:NavTree_013))
Declaration(Class(:NavTree_014))
Declaration(Class(:NavTree_015))
Declaration(Class(:NavTree_016))
Declaration(Class(:NavTree_017))
Declaration(Class(:NavTree_018))
Declaration(Class(:NavTree_019))
Declaration(Class(:NavTree_020))
Declaration(Class(:NavTree_021))
Declaration(Class(:NavTree_022))
Declaration(Class(:NavTree_023))
Declaration(Class(:NavTree_024))
Declaration(Class(:NavTree_025))
Declaration(Class(:NavTree_028))
Declaration(Class(:Regionalized_System))
Declaration(Class(:SCADA_terminal))
Declaration(Class(:TorontoWaterAsset))
Declaration(Class(:UPS))
Declaration(Class(:UV_disinfectionAssembly))
Declaration(Class(:UV_disinfectionLampUnit))
Declaration(Class(:aPowerDesc))
Declaration(Class(:aPressureDesc))
Declaration(Class(:aTemperatureDesc))
Declaration(Class(:aVoltageDesc))
Declaration(Class(:aVolumetricCapacityDesc))
Declaration(Class(:abovegroundFuelOilTank_TEMP))
Declaration(Class(:abovegroundFuelTank_TEMP))
Declaration(Class(:actuator))
Declaration(Class(:aerationTank))
Declaration(Class(:airCondition))
Declaration(Class(:airConditioning))
Declaration(Class(:airDamper))
Declaration(Class(:airDryer))
Declaration(Class(:airDuctSegment))
Declaration(Class(:airExchangerUnit))
Declaration(Class(:airFilterCartrige))
Declaration(Class(:airFiltrationUnit))
Declaration(Class(:airHandler))
Declaration(Class(:airScrubber))
Declaration(Class(:analyzer))
Declaration(Class(:annunciatorPanel))
Declaration(Class(:applicationServerAppliance))
Declaration(Class(:area))
Declaration(Class(:ashLagoon))
Declaration(Class(:asset))
Declaration(Class(:assetDescription))
Declaration(Class(:assetManufacturer))
Declaration(Class(:assetOwner))
Declaration(Class(:assetRole))
Declaration(Class(:assetStatus))
Declaration(Class(:atomicLevelWork))
Declaration(Class(:audibleAlarm))
Declaration(Class(:automaticExternalDefibrillator))
Declaration(Class(:backflowPreventer))
Declaration(Class(:bandSaw))
Declaration(Class(:barScreenUnit))
Declaration(Class(:batteryBank))
Declaration(Class(:batteryCharger))
Declaration(Class(:batteryUnit))
Declaration(Class(:bearing))
Declaration(Class(:beingAPartOfThe))
Declaration(Class(:belt))
Declaration(Class(:beltConveyor))
Declaration(Class(:beltPress))
Declaration(Class(:biogas))
Declaration(Class(:bioreactor))
Declaration(Class(:bioreactorMediumCartridgeOrCassette))
Declaration(Class(:bioswale))
Declaration(Class(:blowerOrFan))
Declaration(Class(:boat))
Declaration(Class(:bodyMaterial))
Declaration(Class(:boiler))
Declaration(Class(:boilerFitting))
Declaration(Class(:breaker))
Declaration(Class(:bridge))
Declaration(Class(:building))
Declaration(Class(:buildingAutomationSystemController))
Declaration(Class(:burner))
Declaration(Class(:burnerComponent))
Declaration(Class(:cableSegment))
Declaration(Class(:capability))
Declaration(Class(:capacitor))
Declaration(Class(:cardReader))
Declaration(Class(:catchBasin))
Declaration(Class(:category_G_boilerFitting))
Declaration(Class(:centrifuge))
Declaration(Class(:chainAndFlightCollector))
Declaration(Class(:chamber))
Declaration(Class(:channelSegment))
Declaration(Class(:checkValve))
Declaration(Class(:chemicalContactTank))
Declaration(Class(:chemicalDosingSystemOrComponentAsset))
Declaration(Class(:chemicalProtection))
Declaration(Class(:chemicalReactor))
Declaration(Class(:chemicalStorageTank))
Declaration(Class(:chemicalSuit))
Declaration(Class(:chiller))
Declaration(Class(:chillerCondenser))
Declaration(Class(:chillerEvaporator))
Declaration(Class(:chlorinatorSystem))
Declaration(Class(:chlorineAnalyzer))
Declaration(Class(:cityByLaw))
Declaration(Class(:clarifier))
Declaration(Class(:classifier))
Declaration(Class(:coagulationAndFlocculationTank))
Declaration(Class(:coagulationTank))
Declaration(Class(:collectionOfAssets))
Declaration(Class(:collectionOfThings))
Declaration(Class(:collectorMecahanism))
Declaration(Class(:combustableMaterial))
Declaration(Class(:combustionTurbine))
Declaration(Class(:compactor))
Declaration(Class(:compressedGasCylinder))
Declaration(Class(:compressor))
Declaration(Class(:computer))
Declaration(Class(:condensateTrap))
Declaration(Class(:conductivityAnalyzer))
Declaration(Class(:constructedOilGreaseSeparator))
Declaration(Class(:containingA))
Declaration(Class(:contentCompilation))
Declaration(Class(:contentSubject))
Declaration(Class(:contentSummary))
Declaration(Class(:controlledAccessBarrier))
Declaration(Class(:controlledDoorAccess))
Declaration(Class(:controller))
Declaration(Class(:conveyanceOfMaterialFlow))
Declaration(Class(:conveyor))
Declaration(Class(:coolingTower))
Declaration(Class(:corporatePolicy))
Declaration(Class(:correctiveWork))
Declaration(Class(:counter))
Declaration(Class(:crane))
Declaration(Class(:culvert))
Declaration(Class(:cycloneClassifier))
Declaration(Class(:damperActuator))
Declaration(Class(:definedCollectionOfAssets))
Declaration(Class(:definedState))
Declaration(Class(:dehumidifier))
Declaration(Class(:descendingDevice))
Declaration(Class(:description))
Declaration(Class(:detentionTank))
Declaration(Class(:dewateringCentrifuge))
Declaration(Class(:dewateringPress))
Declaration(Class(:diesel))
Declaration(Class(:digesterGas))
Declaration(Class(:digesterTank))
Declaration(Class(:dimension))
Declaration(Class(:disconnectSwitch))
Declaration(Class(:discreteAsset))
Declaration(Class(:discreteAssetSystem))
Declaration(Class(:discreteCommercialProduct))
Declaration(Class(:disinfectionTank))
Declaration(Class(:display))
Declaration(Class(:dissolvedChemicalAnalyzer))
Declaration(Class(:dissolvedOxygenInstrumentation))
Declaration(Class(:distributedSystem))
Declaration(Class(:distributionSystem))
Declaration(Class(:documentContent))
Declaration(Class(:dosingPump))
Declaration(Class(:drillPress))
Declaration(Class(:drinkingWaterStorage))
Declaration(Class(:driving))
Declaration(Class(:dryPond))
Declaration(Class(:dryer))
Declaration(Class(:dustCollector))
Declaration(Class(:easement))
Declaration(Class(:eductor))
Declaration(Class(:ejector))
Declaration(Class(:electricalConduitSection))
Declaration(Class(:electricalCurrentInstrumentation))
Declaration(Class(:electricalDistributionOrMotorControlPanelAssets))
Declaration(Class(:electricalDuctBankSection))
Declaration(Class(:electricalInstrumentation))
Declaration(Class(:electricalSafety))
Declaration(Class(:electrostaticPrecipitator))
Declaration(Class(:elevator))
Declaration(Class(:emergencyEyewashOrShower))
Declaration(Class(:emergencyPowerSystem))
Declaration(Class(:emergencyWork))
Declaration(Class(:endTruck))
Declaration(Class(:energyRecoveryVentilator))
Declaration(Class(:engine))
Declaration(Class(:entryAccessControlUnit))
Declaration(Class(:environmentalHazard))
Declaration(Class(:equipmentLocalControlPanelAssets))
Declaration(Class(:event))
Declaration(Class(:expansionJoint))
Declaration(Class(:facility))
Declaration(Class(:facilityProcessSystem))
Declaration(Class(:fallArrestDavitArm))
Declaration(Class(:fallArrestHarness))
Declaration(Class(:fallArrestRopeGrab))
Declaration(Class(:fallArrestSystem))
Declaration(Class(:fallProtectionDescendingDevice))
Declaration(Class(:fallProtectionEnergyAbsorber))
Declaration(Class(:fallProtectionEquipment))
Declaration(Class(:fallRestraintSystem))
Declaration(Class(:fallRestrictingSystem))
Declaration(Class(:federalRegulation))
Declaration(Class(:fenceSection))
Declaration(Class(:figureContent))
Declaration(Class(:filterPress))
Declaration(Class(:filter_MTD))
Declaration(Class(:filtrationTank))
Declaration(Class(:fireRatedDoor))
Declaration(Class(:firstAidEquipment))
Declaration(Class(:firstAidKit))
Declaration(Class(:firstAidRoomEquipmentSet))
Declaration(Class(:firstAidStationEquipmentSet))
Declaration(Class(:fixedGasDetector))
Declaration(Class(:fixedLadder))
Declaration(Class(:flameArrestor))
Declaration(Class(:flameOrCombustionInstrumentation))
Declaration(Class(:floatationEquipment))
Declaration(Class(:flocculationTank))
Declaration(Class(:flowIntegratedSystem))
Declaration(Class(:flowOrPressureControlAsset))
Declaration(Class(:flowSensingElement))
Declaration(Class(:flowmeter))
Declaration(Class(:fluidizedBedIncinerator))
Declaration(Class(:forklift))
Declaration(Class(:fuel))
Declaration(Class(:fuelAppliance))
Declaration(Class(:fuelOil))
Declaration(Class(:fuelOilAppliance))
Declaration(Class(:fuelOilTank))
Declaration(Class(:fuelPipingSystem))
Declaration(Class(:fuelTank))
Declaration(Class(:functionalAssemblyOfComponents))
Declaration(Class(:functionalCapability))
Declaration(Class(:furnace))
Declaration(Class(:fuse))
Declaration(Class(:fusiblePlug))
Declaration(Class(:gasAppliance))
Declaration(Class(:gasDiffuser))
Declaration(Class(:gasDiffuserGridAssembly))
Declaration(Class(:gasHolder))
Declaration(Class(:gaseousChemicalAndAirQualityInstrumentation))
Declaration(Class(:gaseousMaterial))
Declaration(Class(:gasoline))
Declaration(Class(:gasolineTank))
Declaration(Class(:gasometer))
Declaration(Class(:gate))
Declaration(Class(:gauge))
Declaration(Class(:generator))
Declaration(Class(:genericReactor))
Declaration(Class(:golfCart))
Declaration(Class(:governmentRegulation))
Declaration(Class(:granularMaterial))
Declaration(Class(:grinder))
Declaration(Class(:grinderOrComminutor))
Declaration(Class(:guideline))
Declaration(Class(:havingAPart))
Declaration(Class(:hazard))
Declaration(Class(:hazardousGasMonitoringDevice))
Declaration(Class(:healthAndSafetyHazard))
Declaration(Class(:heatExchanger))
Declaration(Class(:heatPumpUnit))
Declaration(Class(:heater))
Declaration(Class(:heatingBoiler))
Declaration(Class(:heatingOrCoolingAsset))
Declaration(Class(:heavyMetalAnalyzer))
Declaration(Class(:hierarchicalSystem))
Declaration(Class(:highVoltageStick))
Declaration(Class(:highVoltageTester))
Declaration(Class(:hoist))
Declaration(Class(:holdingCapacity))
Declaration(Class(:hopper))
Declaration(Class(:horizontalLifeline))
Declaration(Class(:hotWorkEquipment))
Declaration(Class(:hydrant))
Declaration(Class(:hydrantSystem))
Declaration(Class(:incinerator))
Declaration(Class(:infiltrationTrench))
Declaration(Class(:informationContentEntity))
Declaration(Class(:informationIOutputDevice))
Declaration(Class(:informationProcessingOrAnalysis))
Declaration(Class(:informationRecordingOrStorage))
Declaration(Class(:informativeResource))
Declaration(Class(:infraredCamera))
Declaration(Class(:instrumentAirOrPneumaticControlPanel))
Declaration(Class(:instrumentation))
Declaration(Class(:integratedUnitOfStandalones))
Declaration(Class(:interceptor))
Declaration(Class(:intercomUnit))
Declaration(Class(:interpretation))
Declaration(Class(:investigativeWork))
Declaration(Class(:jointer))
Declaration(Class(:kerosene))
Declaration(Class(:laboratory))
Declaration(Class(:laboratoryTool))
Declaration(Class(:ladder))
Declaration(Class(:landfillGas))
Declaration(Class(:lathe))
Declaration(Class(:legislation))
Declaration(Class(:length))
Declaration(Class(:levelInstrumentation))
Declaration(Class(:levelSwitch))
Declaration(Class(:levelTransmitter))
Declaration(Class(:lifeJacket))
Declaration(Class(:lifeRing))
Declaration(Class(:liftingOrTransport))
Declaration(Class(:lightingPanel))
Declaration(Class(:lightingUnit))
Declaration(Class(:lineStructure))
Declaration(Class(:liquid))
Declaration(Class(:loadBreakSwitch))
Declaration(Class(:loadingDock))
Declaration(Class(:machineShopTool))
Declaration(Class(:mainPathLine))
Declaration(Class(:manhole))
Declaration(Class(:manlift))
Declaration(Class(:manufacturedOilGreaseSeparator))
Declaration(Class(:manufacturedTreatmentDevice))
Declaration(Class(:mass))
Declaration(Class(:material))
Declaration(Class(:materialAdditionOrFeedingAsset))
Declaration(Class(:materialDistributionPanelAssets))
Declaration(Class(:materialProcessingAsset))
Declaration(Class(:maxInputVoltage))
Declaration(Class(:measureOfCurrentFlow))
Declaration(Class(:measureOfMassFlow))
Declaration(Class(:measureOfPowerLevel))
Declaration(Class(:measureOfPressure))
Declaration(Class(:measureOfQuantity))
Declaration(Class(:measureOfSpeed))
Declaration(Class(:measureOfVoltageLevel))
Declaration(Class(:measureOfWeight))
Declaration(Class(:mechanicalEnergyOrMotion))
Declaration(Class(:mechanicalFitting))
Declaration(Class(:membraneBioreactor))
Declaration(Class(:millingMachine))
Declaration(Class(:minInputVoltage))
Declaration(Class(:mixerOrAgitator))
Declaration(Class(:mobileLift))
Declaration(Class(:modularDiscreteAssembly))
Declaration(Class(:motionSensor))
Declaration(Class(:motor))
Declaration(Class(:motorDriveOr_VFD))
Declaration(Class(:motorStarter))
Declaration(Class(:multiParametertrumentation))
Declaration(Class(:naturalGas))
Declaration(Class(:networkPanelAssets))
Declaration(Class(:networkRouter))
Declaration(Class(:networkStorageAppliance))
Declaration(Class(:networkSwitch))
Declaration(Class(:nitrateOrNitriteAnalyzer))
Declaration(Class(:nominalInputVoltage))
Declaration(Class(:non-standaloneComponent))
Declaration(Class(:noteTaking))
Declaration(Class(:observation))
Declaration(Class(:occupyingThe))
Declaration(Class(:oilGreaseSeperator))
Declaration(Class(:ontarioRegulation))
Declaration(Class(:opperationState))
Declaration(Class(:organization))
Declaration(Class(:outfallOrDischargePoint))
Declaration(Class(:ozoneGenerator))
Declaration(Class(:pH_analyzer))
Declaration(Class(:packaged_AC_Unit))
Declaration(Class(:paragraphContent))
Declaration(Class(:partOfBuildingOrStructure))
Declaration(Class(:passengerVehicles))
Declaration(Class(:pathOfConveyance))
Declaration(Class(:pelletizer))
Declaration(Class(:personalGasMeter))
Declaration(Class(:personnalFloatationDevice))
Declaration(Class(:phosphateAnalyzer))
Declaration(Class(:pickupTruck))
Declaration(Class(:pieceOfContent))
Declaration(Class(:pieceOfLawn))
Declaration(Class(:pipeFitting))
Declaration(Class(:pipeManifold))
Declaration(Class(:pipeSegment))
Declaration(Class(:pipette))
Declaration(Class(:pipingSystem))
Declaration(Class(:planer))
Declaration(Class(:plantingSpace))
Declaration(Class(:polymerPreparationSystem))
Declaration(Class(:pond))
Declaration(Class(:portableGasDetector))
Declaration(Class(:portableLadder))
Declaration(Class(:portableScaffolding))
Declaration(Class(:portionOfGranularBioreactorMedium))
Declaration(Class(:portionOfGranularFilterMedium))
Declaration(Class(:positionInstrumentation))
Declaration(Class(:powerBoiler))
Declaration(Class(:powerHarmonicFilter))
Declaration(Class(:powerWasher))
Declaration(Class(:poweredAirRespirator))
Declaration(Class(:pressureInstrumentation))
Declaration(Class(:pressureReliefDevice))
Declaration(Class(:pressureReliefOrExplosionPrevention))
Declaration(Class(:pressureReliefValve))
Declaration(Class(:pressureSwitch))
Declaration(Class(:pressureTransmitter))
Declaration(Class(:pressurizedPipingSystem))
Declaration(Class(:preventiveWork))
Declaration(Class(:process))
Declaration(Class(:processControlPanelAssets))
Declaration(Class(:processPipeSegment))
Declaration(Class(:processing))
Declaration(Class(:progammableLogicController))
Declaration(Class(:projectWork))
Declaration(Class(:propane))
Declaration(Class(:propertyState))
Declaration(Class(:protectionRelay))
Declaration(Class(:publicAnnoucementSpeaker))
Declaration(Class(:publisher))
Declaration(Class(:pulsationDampener))
Declaration(Class(:pump))
Declaration(Class(:pumpSurgeSuppressionTank))
Declaration(Class(:pumpWetWell))
Declaration(Class(:pumpingStation))
Declaration(Class(:qualification))
Declaration(Class(:quality))
Declaration(Class(:quencher))
Declaration(Class(:radialArmDrill))
Declaration(Class(:ratedPowerOutput))
Declaration(Class(:reactor))
Declaration(Class(:reactorComponent))
Declaration(Class(:relationalState))
Declaration(Class(:reliefValve))
Declaration(Class(:remoteTerminalUnit))
Declaration(Class(:replaceableFilterCartridge))
Declaration(Class(:requirement))
Declaration(Class(:reservoir))
Declaration(Class(:residualChlorineInstrumentation))
Declaration(Class(:respiratorMask))
Declaration(Class(:respiratoryHazardProtection))
Declaration(Class(:revision))
Declaration(Class(:roadSegement))
Declaration(Class(:role))
Declaration(Class(:roleOfAPerson))
Declaration(Class(:rollUpDoor))
Declaration(Class(:roof))
Declaration(Class(:ropeOrCableGrab))
Declaration(Class(:rotaryDrumThickener))
Declaration(Class(:rotatingCollector))
Declaration(Class(:rotationalSpeed))
Declaration(Class(:rubberInsulatingGloves))
Declaration(Class(:rubberInsulatingSleeves))
Declaration(Class(:ruptureDisc))
Declaration(Class(:safetyReliefValve))
Declaration(Class(:safetyValve))
Declaration(Class(:samplingPoint))
Declaration(Class(:scaffolding))
Declaration(Class(:scissorsLift))
Declaration(Class(:screwClassifier))
Declaration(Class(:screwConveyor))
Declaration(Class(:screwPress))
Declaration(Class(:sealOrGasket))
Declaration(Class(:sectionContent))
Declaration(Class(:securityCamera))
Declaration(Class(:securityOrAccessControlAsset))
Declaration(Class(:sedimentationTank))
Declaration(Class(:selfContainedBreathingApparatus))
Declaration(Class(:selfRetractingLifeline))
Declaration(Class(:semi-solid))
Declaration(Class(:sensingAsset))
Declaration(Class(:separator))
Declaration(Class(:serverAppliance))
Declaration(Class(:sewerSegment))
Declaration(Class(:sewerServiceConnection))
Declaration(Class(:simpleLine))
Declaration(Class(:singleParameterInstrumentation))
Declaration(Class(:sittingWithinThe))
Declaration(Class(:sling))
Declaration(Class(:sludge))
Declaration(Class(:solenoid))
Declaration(Class(:solid))
Declaration(Class(:space))
Declaration(Class(:specification))
Declaration(Class(:speedOfTravel))
Declaration(Class(:spillKit))
Declaration(Class(:stack))
Declaration(Class(:steamTrap))
Declaration(Class(:stillOrVideoMobileCamera))
Declaration(Class(:storageTank))
Declaration(Class(:stormServiceConnection))
Declaration(Class(:strainer))
Declaration(Class(:structuralTank))
Declaration(Class(:structuralTankComponent))
Declaration(Class(:structuralWall))
Declaration(Class(:sulphinationSystem))
Declaration(Class(:suppliedAirRespirator))
Declaration(Class(:switchgearDistributionBus))
Declaration(Class(:switchgearGroundingDevice))
Declaration(Class(:system))
Declaration(Class(:systemOfDiscreteAssets))
Declaration(Class(:systemTrain))
Declaration(Class(:tableContent))
Declaration(Class(:tableSaw))
Declaration(Class(:tankOrVessel))
Declaration(Class(:technicalStandard))
Declaration(Class(:temperatureInstrumentation))
Declaration(Class(:temperatureSensingElement))
Declaration(Class(:temperatureSwitch))
Declaration(Class(:temperatureTransmitter))
Declaration(Class(:theMaxAllowableWorkingPressure))
Declaration(Class(:theMaxAllowableWorkingTemp))
Declaration(Class(:theMaxInputVoltageDesc))
Declaration(Class(:theMinInputVoltageDesc))
Declaration(Class(:theNominalOutputPower))
Declaration(Class(:theSubstanceInContainment))
Declaration(Class(:theVolumetricCapacityDesc))
Declaration(Class(:thermostatOrZoneControllerUnit))
Declaration(Class(:thickener))
Declaration(Class(:thickeningCentrifuge))
Declaration(Class(:tool))
Declaration(Class(:totalDissolvedSolidsInstrumentation))
Declaration(Class(:totalSuspendedSolidsInstrumentation))
Declaration(Class(:tower))
Declaration(Class(:transferSwitch))
Declaration(Class(:transformer))
Declaration(Class(:trapPrimer))
Declaration(Class(:travelingScreenUnit))
Declaration(Class(:travellingBridgeCollector))
Declaration(Class(:treatmentFilterCartridgeOrCassette))
Declaration(Class(:treatmentSeparator))
Declaration(Class(:treePlantingSoilCell))
Declaration(Class(:tunnel))
Declaration(Class(:turbidityAnalyzer))
Declaration(Class(:undergroundFuelOilTank_TEMP))
Declaration(Class(:undergroundFuelTank_TEMP))
Declaration(Class(:unitOfBioreactorMedium))
Declaration(Class(:unitOfElectricalCurrent))
Declaration(Class(:unitOfMass))
Declaration(Class(:unitOfMeasure))
Declaration(Class(:unitOfPower))
Declaration(Class(:unitOfPressure))
Declaration(Class(:unitOfTreatmentFilterMedium))
Declaration(Class(:unitOfVoltage))
Declaration(Class(:vaccumCleaner))
Declaration(Class(:valve))
Declaration(Class(:valveActuator))
Declaration(Class(:valveRole))
Declaration(Class(:vapour))
Declaration(Class(:variableAirVolumeUnit))
Declaration(Class(:ventilationSystem))
Declaration(Class(:verticalLifeline))
Declaration(Class(:vibratingConveyor))
Declaration(Class(:vibrationAnalyzer))
Declaration(Class(:vibrationInstrumentation))
Declaration(Class(:voltageInstrumentation))
Declaration(Class(:voltageSurgeSuppressor))
Declaration(Class(:vortexClassifier))
Declaration(Class(:wasteGasBurner))
Declaration(Class(:wastewaterStoragePipe))
Declaration(Class(:water))
Declaration(Class(:waterQualityInstrumentation))
Declaration(Class(:waterServiceConnection))
Declaration(Class(:waterTower))
Declaration(Class(:waterTrailer))
Declaration(Class(:watermain))
Declaration(Class(:weightScale))
Declaration(Class(:weirStructure))
Declaration(Class(:weldingReceptacle))
Declaration(Class(:well))
Declaration(Class(:wetPond))
Declaration(Class(:wetWeatherFlowStorage))
Declaration(Class(:wirelessAccessPoint))
Declaration(Class(:work))
Declaration(Class(:workOrderLevelWork))
Declaration(Class(:workOrderSpecification))
Declaration(Class(:workSpecification))
Declaration(Class(:wrench))
Declaration(Class(:yard))
Declaration(ObjectProperty(:contains))
Declaration(ObjectProperty(:created))
Declaration(ObjectProperty(:describes))
Declaration(ObjectProperty(:descriptionProperty))
Declaration(ObjectProperty(:fullyGrounds))
Declaration(ObjectProperty(:grounds))
Declaration(ObjectProperty(:hasContentPart))
Declaration(ObjectProperty(:hasEarlierVersion))
Declaration(ObjectProperty(:hasInputVoltageInVolts))
Declaration(ObjectProperty(:hasLaterVersion))
Declaration(ObjectProperty(:hasMeasurement))
Declaration(ObjectProperty(:hasNextVersion))
Declaration(ObjectProperty(:hasNumericSpec))
Declaration(ObjectProperty(:hasPart))
Declaration(ObjectProperty(:hasPerformanceMeasurement))
Declaration(ObjectProperty(:hasPerformanceRequirement))
Declaration(ObjectProperty(:hasPhysicalPart))
Declaration(ObjectProperty(:hasPresentProperty))
Declaration(ObjectProperty(:hasPreviousVersion))
Declaration(ObjectProperty(:hasProperty))
Declaration(ObjectProperty(:hasPublisher))
Declaration(ObjectProperty(:hasSpecifedRelation))
Declaration(ObjectProperty(:hasSpecification))
Declaration(ObjectProperty(:hasSubjectType))
Declaration(ObjectProperty(:hasSubsystem))
Declaration(ObjectProperty(:hasSummary))
Declaration(ObjectProperty(:hasUnitOfMeasure))
Declaration(ObjectProperty(:includesContent))
Declaration(ObjectProperty(:includesContentAbout))
Declaration(ObjectProperty(:includesWorkInstructionContent))
Declaration(ObjectProperty(:includesWorkerQualificationContent))
Declaration(ObjectProperty(:isADevelopmentOf))
Declaration(ObjectProperty(:isCreatedBy))
Declaration(ObjectProperty(:isDescribedAsObjectOf))
Declaration(ObjectProperty(:isDescribedAsSubjectOf))
Declaration(ObjectProperty(:isDescribedBy))
Declaration(ObjectProperty(:isDesignedToHold))
Declaration(ObjectProperty(:isDevelopedInto))
Declaration(ObjectProperty(:isInAStateOf))
Declaration(ObjectProperty(:isOccupiedBy))
Declaration(ObjectProperty(:isPartOf))
Declaration(ObjectProperty(:isPartOfContent))
Declaration(ObjectProperty(:isPhysicalPartOf))
Declaration(ObjectProperty(:isQuantifiedBy))
Declaration(ObjectProperty(:isSubsystemOf))
Declaration(ObjectProperty(:occupies))
Declaration(ObjectProperty(:partiallyGrounds))
Declaration(ObjectProperty(:possessesFunction))
Declaration(ObjectProperty(:realizationContingentOn))
Declaration(ObjectProperty(:references))
Declaration(ObjectProperty(:referencesForAdoption))
Declaration(ObjectProperty(:relativeToOnsetOf))
Declaration(ObjectProperty(:relativeToTerminationOf))
Declaration(ObjectProperty(:sitsWithin))
Declaration(ObjectProperty(:specifiedAsHavingPart))
Declaration(ObjectProperty(:specifiesTriggerEvent))
Declaration(ObjectProperty(:theIndividual))
Declaration(DataProperty(:hasAssetStatus))
Declaration(DataProperty(:hasBoilerServiceType))
Declaration(DataProperty(:hasContentText))
Declaration(DataProperty(:hasCreationTime))
Declaration(DataProperty(:hasDeaerator))
Declaration(DataProperty(:hasDocumentURL))
Declaration(DataProperty(:hasIntentDescription))
Declaration(DataProperty(:hasInterpretationText))
Declaration(DataProperty(:hasName))
Declaration(DataProperty(:hasNumericValue))
Declaration(DataProperty(:hasOperationalState))
Declaration(DataProperty(:hasPresentValue))
Declaration(DataProperty(:hasPublicationDate))
Declaration(DataProperty(:hasRevisionDate))
Declaration(DataProperty(:hasScopeDescription))
Declaration(DataProperty(:hasSealedOrShieldedBearing))
Declaration(DataProperty(:has_NEMA_enclosureType))
Declaration(DataProperty(:has_NEMA_frameType))
Declaration(DataProperty(:includesWorkInstructionText))
Declaration(DataProperty(:isAboveGround))
Declaration(DataProperty(:isActuatedValve))
Declaration(DataProperty(:isControlledValve))
Declaration(DataProperty(:isDesignatedBy))
Declaration(DataProperty(:isInstalledUnderground))
Declaration(DataProperty(:isLatestVersion))
Declaration(DataProperty(:isSubjectOfNote))
Declaration(DataProperty(:isUnderGround))
Declaration(DataProperty(:usesBearingLubricantType))
Declaration(NamedIndividual(:horsepower))
Declaration(NamedIndividual(:kilopascal))
Declaration(NamedIndividual(:kilovolt))
Declaration(NamedIndividual(:kilovolt-ampere))
Declaration(NamedIndividual(:kilowatt))
Declaration(NamedIndividual(:megavolt-ampere))
Declaration(NamedIndividual(:megawatt))
Declaration(NamedIndividual(:poundsPerSquareInch))
Declaration(NamedIndividual(:volt))
Declaration(NamedIndividual(:volt-ampere))
Declaration(NamedIndividual(:watt))
Declaration(AnnotationProperty(:AvClassChild))
Declaration(AnnotationProperty(:AvClassEquivalent))
Declaration(AnnotationProperty(:AvClassOverlap))
Declaration(AnnotationProperty(:AvClassParent))
Declaration(AnnotationProperty(:TW_PCS_code))
Declaration(AnnotationProperty(:classTree-excludeFromBranch))
Declaration(AnnotationProperty(:classTree-inclusion))
Declaration(AnnotationProperty(:classTree-sortOrder))
Declaration(AnnotationProperty(:dev-PropertyNote))
Declaration(AnnotationProperty(:dev-developerNote))
Declaration(AnnotationProperty(:dev-ontologyNote))
Declaration(AnnotationProperty(:notionMappingID))
Declaration(AnnotationProperty(<http://www.w3.org/2004/02/skos/core#altLabel>))
############################
#   Annotation Properties
############################

# Annotation Property: :classTree-excludeFromBranch (:classTree-excludeFromBranch)

AnnotationPropertyRange(:classTree-excludeFromBranch xsd:anyURI)

# Annotation Property: :classTree-inclusion (:classTree-inclusion)

AnnotationPropertyRange(:classTree-inclusion xsd:boolean)

# Annotation Property: :notionMappingID (:notionMappingID)

AnnotationAssertion(rdfs:isDefinedBy :notionMappingID "CSA C282: A generator providing emergency power to one of the following:
a) fire alarm and emergency voice communications systems;
b) firefighter’s elevators and elevators serving storeys above the first storey in a high building;
c) fire protection water supply pumps that depend on electrical power supplied to the building;
d) smoke control and smoke venting systems;
e) emergency lighting; and
f) exit signs that depend on electrical power supplied to the building.")


############################
#   Object Properties
############################

# Object Property: :contains (:contains)

SubObjectPropertyOf(:contains :hasPresentProperty)

# Object Property: :created (:created)

SubObjectPropertyOf(:created :hasPresentProperty)

# Object Property: :describes (:describes)

SubObjectPropertyOf(:describes :descriptionProperty)
InverseObjectProperties(:describes :isDescribedBy)
ObjectPropertyDomain(:describes :description)

# Object Property: :descriptionProperty (:descriptionProperty)

AnnotationAssertion(rdfs:comment :descriptionProperty "Feb'24: competing for existence agains hasPropertyState")

# Object Property: :fullyGrounds (:fullyGrounds)

SubObjectPropertyOf(:fullyGrounds :grounds)

# Object Property: :grounds (grounds)

AnnotationAssertion(rdfs:label :grounds "grounds"@en)
SubObjectPropertyOf(:grounds :hasPresentProperty)
TransitiveObjectProperty(:grounds)

# Object Property: :hasContentPart (:hasContentPart)

SubObjectPropertyOf(:hasContentPart :hasPart)
InverseObjectProperties(:hasContentPart :isPartOfContent)

# Object Property: :hasEarlierVersion (has earlier version)

AnnotationAssertion(rdfs:label :hasEarlierVersion "has earlier version"@en)
SubObjectPropertyOf(:hasEarlierVersion :hasPresentProperty)
TransitiveObjectProperty(:hasEarlierVersion)

# Object Property: :hasInputVoltageInVolts (:hasInputVoltageInVolts)

SubObjectPropertyOf(:hasInputVoltageInVolts :hasNumericSpec)

# Object Property: :hasLaterVersion (has later version)

AnnotationAssertion(rdfs:label :hasLaterVersion "has later version"@en)
SubObjectPropertyOf(:hasLaterVersion :hasPresentProperty)
TransitiveObjectProperty(:hasLaterVersion)

# Object Property: :hasMeasurement (:hasMeasurement)

SubObjectPropertyOf(:hasMeasurement :hasPresentProperty)

# Object Property: :hasNextVersion (has next version)

AnnotationAssertion(rdfs:label :hasNextVersion "has next version"@en)
SubObjectPropertyOf(:hasNextVersion :hasLaterVersion)

# Object Property: :hasNumericSpec (:hasNumericSpec)

AnnotationAssertion(rdfs:comment :hasNumericSpec "Mar10'24 TH: The use of this has been deprecated.  This implementation was considered before I had settled on using reified measurement entities. Such as measureOfPowerLevel")
AnnotationAssertion(rdfs:comment :hasNumericSpec "Mar20'24: this cat. still has a place in the ontology to present a \"shortcut\" to an often used value. For instance. hasInputVoltageInVolts instead of just hasInputVoltage.")
SubObjectPropertyOf(:hasNumericSpec :hasSpecification)

# Object Property: :hasPart (:hasPart)

SubObjectPropertyOf(:hasPart :hasPresentProperty)
InverseObjectProperties(:hasPart :isPartOf)
TransitiveObjectProperty(:hasPart)

# Object Property: :hasPerformanceMeasurement (:hasPerformanceMeasurement)

SubObjectPropertyOf(:hasPerformanceMeasurement :hasMeasurement)

# Object Property: :hasPerformanceRequirement (:hasPerformanceRequirement)

SubObjectPropertyOf(:hasPerformanceRequirement :hasSpecification)

# Object Property: :hasPhysicalPart (:hasPhysicalPart)

SubObjectPropertyOf(:hasPhysicalPart :hasPart)
InverseObjectProperties(:hasPhysicalPart :isPhysicalPartOf)

# Object Property: :hasPresentProperty (:hasPresentProperty)

AnnotationAssertion(rdfs:comment :hasPresentProperty "TH Dec/2023: 
The following properties are represented without reification.
1. The binary relations represented by classes \"Relation>Binary Relation To\" 
2. Unary relations pointing to a (complex) state, represented by a string or boolean value (This is represented as a DataProperty)")

# Object Property: :hasPreviousVersion (has previous version)

AnnotationAssertion(rdfs:label :hasPreviousVersion "has previous version"@en)
SubObjectPropertyOf(:hasPreviousVersion :hasEarlierVersion)

# Object Property: :hasProperty (:hasProperty)

AnnotationAssertion(rdfs:comment :hasProperty "Specialized for states related to the physical quality of the entity
Usage Examples:
AssetX hasProperty assetMass
AssetX hasProperty assetHealth")
SubObjectPropertyOf(:hasProperty owl:topObjectProperty)
ObjectPropertyRange(:hasProperty :propertyState)

# Object Property: :hasPublisher (has publisher)

AnnotationAssertion(:dev-PropertyNote :hasPublisher "range tw:publisher")
AnnotationAssertion(rdfs:label :hasPublisher "has publisher"@en)
SubObjectPropertyOf(:hasPublisher :hasPresentProperty)
ObjectPropertyDomain(:hasPublisher :pieceOfContent)

# Object Property: :hasSpecifedRelation (:hasSpecifedRelation)

SubObjectPropertyOf(:hasSpecifedRelation :hasSpecification)

# Object Property: :hasSpecification (:hasSpecification)

SubObjectPropertyOf(:hasSpecification owl:topObjectProperty)

# Object Property: :hasSubjectType (:hasSubjectType)

SubObjectPropertyOf(:hasSubjectType :hasPresentProperty)
ObjectPropertyRange(:hasSubjectType :contentSubject)

# Object Property: :hasSubsystem (:hasSubsystem)

SubObjectPropertyOf(:hasSubsystem :hasPresentProperty)
InverseObjectProperties(:hasSubsystem :isSubsystemOf)

# Object Property: :hasSummary (has summary)

AnnotationAssertion(rdfs:label :hasSummary "has summary"@en)
SubObjectPropertyOf(:hasSummary :hasPresentProperty)

# Object Property: :hasUnitOfMeasure (:hasUnitOfMeasure)

AnnotationAssertion(rdfs:comment :hasUnitOfMeasure "unit")
SubObjectPropertyOf(:hasUnitOfMeasure :hasPresentProperty)

# Object Property: :includesContent (includes content)

AnnotationAssertion(rdfs:comment :includesContent "TH Dec2023: range: information content entity")
AnnotationAssertion(rdfs:label :includesContent "includes content"@en)
SubObjectPropertyOf(:includesContent :hasPresentProperty)
ObjectPropertyRange(:includesContent :pieceOfContent)

# Object Property: :includesContentAbout (includes content about)

AnnotationAssertion(rdfs:comment :includesContentAbout "TH Dec2023: range:OWL thing")
AnnotationAssertion(rdfs:label :includesContentAbout "includes content about"@en)
SubObjectPropertyOf(:includesContentAbout :hasPresentProperty)

# Object Property: :includesWorkInstructionContent (includes work instruction content)

AnnotationAssertion(rdfs:label :includesWorkInstructionContent "includes work instruction content"@en)
SubObjectPropertyOf(:includesWorkInstructionContent :includesContent)
ObjectPropertyRange(:includesWorkInstructionContent :pieceOfContent)

# Object Property: :includesWorkerQualificationContent (includes worker qualification content)

AnnotationAssertion(rdfs:label :includesWorkerQualificationContent "includes worker qualification content"@en)
SubObjectPropertyOf(:includesWorkerQualificationContent :includesContent)
ObjectPropertyRange(:includesWorkerQualificationContent :pieceOfContent)

# Object Property: :isADevelopmentOf (:isADevelopmentOf)

SubObjectPropertyOf(:isADevelopmentOf :hasPresentProperty)
InverseObjectProperties(:isADevelopmentOf :isDevelopedInto)

# Object Property: :isCreatedBy (:isCreatedBy)

SubObjectPropertyOf(:isCreatedBy :hasPresentProperty)

# Object Property: :isDescribedAsObjectOf (is described as the object of)

AnnotationAssertion(rdfs:label :isDescribedAsObjectOf "is described as the object of")
SubObjectPropertyOf(:isDescribedAsObjectOf :descriptionProperty)

# Object Property: :isDescribedAsSubjectOf (:isDescribedAsSubjectOf)

SubObjectPropertyOf(:isDescribedAsSubjectOf :descriptionProperty)

# Object Property: :isDescribedBy (:isDescribedBy)

SubObjectPropertyOf(:isDescribedBy :descriptionProperty)
ObjectPropertyRange(:isDescribedBy :description)

# Object Property: :isDesignedToHold (:isDesignedToHold)

AnnotationAssertion(rdfs:comment :isDesignedToHold "Initially meant to describe the function of vessel or piping.")
SubObjectPropertyOf(:isDesignedToHold :hasSpecifedRelation)

# Object Property: :isDevelopedInto (has developed manifestation)

AnnotationAssertion(rdfs:label :isDevelopedInto "has developed manifestation"@en)
SubObjectPropertyOf(:isDevelopedInto :hasPresentProperty)
ObjectPropertyDomain(:isDevelopedInto :informationContentEntity)

# Object Property: :isInAStateOf (:isInAStateOf)

AnnotationAssertion(rdfs:comment :isInAStateOf "Specialized for states associated with one or more relations to other entities in the world.
Usage Examples:
as a part of binary relation: 
- AssetX isInAStateOf SittingInside theIndividual RoomY
- AssetX isInAStateOf possessing theIndividual FunctionAC
as a part of unary relation: AssetX isInAStateOf  assetOperationalState")
SubObjectPropertyOf(:isInAStateOf :hasProperty)
ObjectPropertyRange(:isInAStateOf :propertyState)

# Object Property: :isOccupiedBy (:isOccupiedBy)

SubObjectPropertyOf(:isOccupiedBy :hasPresentProperty)
InverseObjectProperties(:isOccupiedBy :occupies)

# Object Property: :isPartOf (:isPartOf)

AnnotationAssertion(rdfs:comment :isPartOf "is physical proper part of")
SubObjectPropertyOf(:isPartOf :hasPresentProperty)
TransitiveObjectProperty(:isPartOf)

# Object Property: :isPartOfContent (:isPartOfContent)

SubObjectPropertyOf(:isPartOfContent :isPartOf)

# Object Property: :isPhysicalPartOf (:isPhysicalPartOf)

SubObjectPropertyOf(:isPhysicalPartOf :isPartOf)

# Object Property: :isQuantifiedBy (:isQuantifiedBy)

AnnotationAssertion(rdfs:comment :isQuantifiedBy "Mar2024 TH: Example usage: :outputVoltage :isQuantifiedBy :measureOfPowerLevel")
ObjectPropertyDomain(:isQuantifiedBy :propertyState)
ObjectPropertyRange(:isQuantifiedBy :measureOfQuantity)

# Object Property: :isSubsystemOf (:isSubsystemOf)

AnnotationAssertion(rdfs:isDefinedBy :isSubsystemOf "A relation that refers to any system in relation to a larger system to which it is a part of.")
SubObjectPropertyOf(:isSubsystemOf :hasPresentProperty)

# Object Property: :occupies (:occupies)

SubObjectPropertyOf(:occupies :hasPresentProperty)

# Object Property: :partiallyGrounds (partially grounds)

AnnotationAssertion(rdfs:label :partiallyGrounds "partially grounds"@en)
SubObjectPropertyOf(:partiallyGrounds :grounds)

# Object Property: :possessesFunction (:possessesFunction)

SubObjectPropertyOf(:possessesFunction :hasPresentProperty)

# Object Property: :realizationContingentOn (:realizationContingentOn)

AnnotationAssertion(rdfs:comment :realizationContingentOn "Mar20'24: This is meant to be used with capability specifications, to keep track of the condition under which the capability / function can be realized. For example. certain pump flow rate being contingent on a certain temperature.")

# Object Property: :references (references)

AnnotationAssertion(rdfs:comment :references "TH 12.5.2023: Create to indicate that one document makes an explicit reference of another body of content.")
AnnotationAssertion(rdfs:label :references "references"@en)
SubObjectPropertyOf(:references :hasPresentProperty)

# Object Property: :referencesForAdoption (references for adoption)

AnnotationAssertion(rdfs:comment :referencesForAdoption "TH 12/5/2023: created to indicate that a body of content does not only contain a reference to another body of content, but also adopts the referred content to be enforceable, under the authority of an origanization such as the government legislature, or the employer.")
AnnotationAssertion(rdfs:label :referencesForAdoption "references for adoption"@en)
SubObjectPropertyOf(:referencesForAdoption :references)

# Object Property: :relativeToOnsetOf (:relativeToOnsetOf)

SubObjectPropertyOf(:relativeToOnsetOf :hasPresentProperty)
ObjectPropertyRange(:relativeToOnsetOf :process)

# Object Property: :relativeToTerminationOf (:relativeToTerminationOf)

SubObjectPropertyOf(:relativeToTerminationOf :hasPresentProperty)
ObjectPropertyRange(:relativeToTerminationOf :process)

# Object Property: :sitsWithin (:sitsWithin)

SubObjectPropertyOf(:sitsWithin :hasPresentProperty)

# Object Property: :specifiedAsHavingPart (:specifiedAsHavingPart)

SubObjectPropertyOf(:specifiedAsHavingPart :hasSpecifedRelation)

# Object Property: :specifiesTriggerEvent (specifies trigger event)

AnnotationAssertion(rdfs:label :specifiesTriggerEvent "specifies trigger event"@en)
SubObjectPropertyOf(:specifiesTriggerEvent :hasSpecifedRelation)

# Object Property: :theIndividual (:theIndividual)

AnnotationAssertion(rdfs:comment :theIndividual "Usage Examples:
AssetX tw:isInAStateOf SittingInside tw:theIndividual RoomY")
ObjectPropertyDomain(:theIndividual :relationalState)


############################
#   Data Properties
############################

# Data Property: :hasAssetStatus (asset status)

AnnotationAssertion(rdfs:label :hasAssetStatus "asset status"@en)
SubDataPropertyOf(:hasAssetStatus :hasPresentValue)

# Data Property: :hasBoilerServiceType (service type)

AnnotationAssertion(rdfs:comment :hasBoilerServiceType "either \"hot water\" or \"steam\"")
AnnotationAssertion(rdfs:label :hasBoilerServiceType "service type")
SubDataPropertyOf(:hasBoilerServiceType :hasPresentValue)

# Data Property: :hasContentText (has content text)

AnnotationAssertion(rdfs:label :hasContentText "has content text"@en)
SubDataPropertyOf(:hasContentText :hasPresentValue)

# Data Property: :hasCreationTime (has creation time)

AnnotationAssertion(rdfs:label :hasCreationTime "has creation time"@en)
SubDataPropertyOf(:hasCreationTime :hasPresentValue)

# Data Property: :hasDeaerator (equiped with deaerator?)

AnnotationAssertion(rdfs:label :hasDeaerator "equiped with deaerator?")
SubDataPropertyOf(:hasDeaerator :hasPresentValue)
DataPropertyRange(:hasDeaerator xsd:boolean)

# Data Property: :hasDocumentURL (has document URL)

AnnotationAssertion(rdfs:label :hasDocumentURL "has document URL"@en)
SubDataPropertyOf(:hasDocumentURL :hasPresentValue)

# Data Property: :hasIntentDescription (has intent description)

AnnotationAssertion(rdfs:comment :hasIntentDescription "TH 12/02/23:
I created this property to point to a piece of text describing the intent of the person(s) who raise the a certain Specific Content Subject.  For example the intent of the legislators who raise the subject of a new legislation.")
AnnotationAssertion(rdfs:label :hasIntentDescription "has intent description"@en)
SubDataPropertyOf(:hasIntentDescription :hasPresentValue)

# Data Property: :hasInterpretationText (:hasInterpretationText)

SubDataPropertyOf(:hasInterpretationText :hasPresentValue)
DataPropertyRange(:hasInterpretationText xsd:string)

# Data Property: :hasName (:hasName)

SubDataPropertyOf(:hasName :hasPresentValue)
DataPropertyRange(:hasName xsd:string)

# Data Property: :hasNumericValue (:hasNumericValue)

AnnotationAssertion(rdfs:comment :hasNumericValue "numeric value")

# Data Property: :hasOperationalState (operational state)

AnnotationAssertion(rdfs:label :hasOperationalState "operational state"@en)
SubDataPropertyOf(:hasOperationalState :hasPresentValue)

# Data Property: :hasPresentValue (:hasPresentValue)

AnnotationAssertion(rdfs:comment :hasPresentValue "TH Dec/2023: For the subset of properties whose value could change over the lifetime of the asset (or independent continuent), you should be able to find the reified equivalence, as a subclass of Class:Property.")
AnnotationAssertion(rdfs:comment :hasPresentValue "TH Jan'24: This is mean to be used with non-numeric values. All numerical values are reified in order to accomedate a UOM")
SubDataPropertyOf(:hasPresentValue :hasPresentValue)

# Data Property: :hasPublicationDate (has publication date)

AnnotationAssertion(rdfs:label :hasPublicationDate "has publication date"@en)
SubDataPropertyOf(:hasPublicationDate :hasPresentValue)

# Data Property: :hasRevisionDate (has revision date)

AnnotationAssertion(rdfs:label :hasRevisionDate "has revision date"@en)
SubDataPropertyOf(:hasRevisionDate :hasPresentValue)

# Data Property: :hasScopeDescription (has scope description)

AnnotationAssertion(rdfs:label :hasScopeDescription "has scope description"@en)
SubDataPropertyOf(:hasScopeDescription :hasPresentValue)
DataPropertyRange(:hasScopeDescription xsd:string)

# Data Property: :hasSealedOrShieldedBearing (sealed or shielded bearing?)

AnnotationAssertion(rdfs:label :hasSealedOrShieldedBearing "sealed or shielded bearing?"@en)
SubDataPropertyOf(:hasSealedOrShieldedBearing :hasPresentValue)

# Data Property: :has_NEMA_enclosureType (NEMA enclosure type)

AnnotationAssertion(rdfs:label :has_NEMA_enclosureType "NEMA enclosure type"@en)
SubDataPropertyOf(:has_NEMA_enclosureType :hasPresentValue)

# Data Property: :has_NEMA_frameType (NEMA frame type)

AnnotationAssertion(rdfs:label :has_NEMA_frameType "NEMA frame type"@en)
SubDataPropertyOf(:has_NEMA_frameType :hasPresentValue)

# Data Property: :includesWorkInstructionText (:includesWorkInstructionText)

AnnotationAssertion(rdfs:comment :includesWorkInstructionText "TH: used in compliance app")
SubDataPropertyOf(:includesWorkInstructionText :hasContentText)

# Data Property: :isAboveGround (:isAboveGround)

SubDataPropertyOf(:isAboveGround :hasPresentValue)

# Data Property: :isActuatedValve (actuated valve?)

AnnotationAssertion(rdfs:label :isActuatedValve "actuated valve?")
SubDataPropertyOf(:isActuatedValve :hasPresentValue)
DataPropertyRange(:isActuatedValve xsd:boolean)

# Data Property: :isControlledValve (controlled valve?)

AnnotationAssertion(rdfs:label :isControlledValve "controlled valve?")
SubDataPropertyOf(:isControlledValve :hasPresentValue)
DataPropertyRange(:isControlledValve xsd:boolean)

# Data Property: :isDesignatedBy (:isDesignatedBy)

SubDataPropertyOf(:isDesignatedBy :hasPresentValue)

# Data Property: :isInstalledUnderground (underground?)

AnnotationAssertion(rdfs:label :isInstalledUnderground "underground?")
SubDataPropertyOf(:isInstalledUnderground :hasPresentValue)

# Data Property: :isLatestVersion (is latest version)

AnnotationAssertion(rdfs:label :isLatestVersion "is latest version"@en)
SubDataPropertyOf(:isLatestVersion :hasPresentValue)
DataPropertyRange(:isLatestVersion xsd:boolean)

# Data Property: :isSubjectOfNote (:isSubjectOfNote)

SubDataPropertyOf(:isSubjectOfNote :hasPresentValue)
DataPropertyRange(:isSubjectOfNote xsd:string)

# Data Property: :isUnderGround (:isUnderGround)

SubDataPropertyOf(:isUnderGround :hasPresentValue)

# Data Property: :usesBearingLubricantType (type of bearing lubricant)

AnnotationAssertion(rdfs:label :usesBearingLubricantType "type of bearing lubricant"@en)
SubDataPropertyOf(:usesBearingLubricantType :hasPresentValue)



############################
#   Classes
############################

# Class: :AC_condenserUnit (:AC_condenserUnit)

SubClassOf(:AC_condenserUnit :airConditioning)
SubClassOf(:AC_condenserUnit :discreteAsset)
SubClassOf(:AC_condenserUnit ObjectSomeValuesFrom(:isPhysicalPartOf :airCondition))

# Class: :AC_evaporatorUnit (:AC_evaporatorUnit)

SubClassOf(:AC_evaporatorUnit :airConditioning)
SubClassOf(:AC_evaporatorUnit :discreteAsset)
SubClassOf(:AC_evaporatorUnit ObjectSomeValuesFrom(:isPhysicalPartOf :airCondition))

# Class: :ALWS (atomic level work specification)

AnnotationAssertion(rdfs:label :ALWS "atomic level work specification")
SubClassOf(:ALWS :workSpecification)

# Class: :COCOA (compilation of content on activity specification)

AnnotationAssertion(rdfs:label :COCOA "compilation of content on activity specification"@en)
SubClassOf(:COCOA :contentCompilation)

# Class: :CSA-B149-6_membraneGasholder (:CSA-B149-6_membraneGasholder)

AnnotationAssertion(:notionMappingID :CSA-B149-6_membraneGasholder "c9c243803090466e87183f25bbcf7ff4")
SubClassOf(:CSA-B149-6_membraneGasholder :gasometer)
SubClassOf(:CSA-B149-6_membraneGasholder ObjectSomeValuesFrom(:isDesignedToHold :biogas))

# Class: :LinearSegmentAsset (linear segment asset)

AnnotationAssertion(rdfs:comment :LinearSegmentAsset "Examples of linear segment include pipe, cable, duct, cable, and road. 
An asset is structurally continuous when its physical and geometric attributes are the same at any two points along its length.  This means there are no junctions.
Many linear assets, such as cables, also provide containment, but this is not a necessary attribute.  A section of road, for example, cannot necessarily contain vehicles")
AnnotationAssertion(rdfs:isDefinedBy :LinearSegmentAsset "An elongated asset that 
* is structurally continuous and 
* provide a path of flow for a material substance, energy, or information from a point to another.")
AnnotationAssertion(rdfs:label :LinearSegmentAsset "linear segment asset")
SubClassOf(:LinearSegmentAsset :discreteAsset)
SubClassOf(:LinearSegmentAsset :pathOfConveyance)

# Class: :MaterialStorageOrSurgeSuppressionAsset (07. material storage or surge suppression)

AnnotationAssertion(rdfs:label :MaterialStorageOrSurgeSuppressionAsset "07. material storage or surge suppression")
SubClassOf(:MaterialStorageOrSurgeSuppressionAsset :NavTree_017)

# Class: :NavTree_001 (01. frequently encountered asset)

AnnotationAssertion(rdfs:label :NavTree_001 "01. frequently encountered asset")
SubClassOf(:NavTree_001 :TorontoWaterAsset)

# Class: :NavTree_002 (02. distribution and collection asset)

AnnotationAssertion(rdfs:label :NavTree_002 "02. distribution and collection asset")
SubClassOf(:NavTree_002 :TorontoWaterAsset)

# Class: :NavTree_003 (03. water or wastewater treatment)

AnnotationAssertion(rdfs:label :NavTree_003 "03. water or wastewater treatment")
SubClassOf(:NavTree_003 :TorontoWaterAsset)

# Class: :NavTree_004 (04. safety or environmental harm prevention)

AnnotationAssertion(rdfs:label :NavTree_004 "04. safety or environmental harm prevention")
SubClassOf(:NavTree_004 :TorontoWaterAsset)

# Class: :NavTree_005 (05. electrical asset or component)

AnnotationAssertion(rdfs:label :NavTree_005 "05. electrical asset or component")
SubClassOf(:NavTree_005 :TorontoWaterAsset)

# Class: :NavTree_006 (06. HVAC asset)

AnnotationAssertion(rdfs:label :NavTree_006 "06. HVAC asset")
SubClassOf(:NavTree_006 :TorontoWaterAsset)

# Class: :NavTree_007 (07. building service or grounds service asset)

AnnotationAssertion(rdfs:label :NavTree_007 "07. building service or grounds service asset")
SubClassOf(:NavTree_007 :TorontoWaterAsset)

# Class: :NavTree_008 (08. building, architectural, or structural asset)

AnnotationAssertion(rdfs:comment :NavTree_008 "Examples of structural asset include large processing tanks, roads, stacks, tunnels, and bridges.
Note that under this definition, a diesel generator bolted to a foundation is not a built structure, while a wind turbine generator is. This is because the ability to withstand a load was not a primary consideration in the generator's design.")
AnnotationAssertion(rdfs:isDefinedBy :NavTree_008 "Partial Definition: Structure - an asset that
* is permanently affixed to the earth (or to another structure affixed to the earth)
* is designed to withstand a static load and environmental stress
and its ability to withstand load and stress was a primary consideration in its design process")
AnnotationAssertion(rdfs:label :NavTree_008 "08. building, architectural, or structural asset")
SubClassOf(:NavTree_008 :TorontoWaterAsset)

# Class: :NavTree_009 (09. part of mechanical assembly)

AnnotationAssertion(rdfs:label :NavTree_009 "09. part of mechanical assembly")
SubClassOf(:NavTree_009 :TorontoWaterAsset)

# Class: :NavTree_010 (11. part of process piping)

AnnotationAssertion(rdfs:label :NavTree_010 "11. part of process piping")
SubClassOf(:NavTree_010 :TorontoWaterAsset)

# Class: :NavTree_011 (10. transportation tool or vehicle)

AnnotationAssertion(rdfs:label :NavTree_011 "10. transportation tool or vehicle")
SubClassOf(:NavTree_011 :TorontoWaterAsset)

# Class: :NavTree_012 (12. general networking asset)

AnnotationAssertion(rdfs:label :NavTree_012 "12. general networking asset")
SubClassOf(:NavTree_012 :TorontoWaterAsset)

# Class: :NavTree_013 (13. green infrastructure asset)

AnnotationAssertion(rdfs:label :NavTree_013 "13. green infrastructure asset")
SubClassOf(:NavTree_013 :TorontoWaterAsset)

# Class: :NavTree_014 (14. common tool)

AnnotationAssertion(rdfs:label :NavTree_014 "14. common tool")
SubClassOf(:NavTree_014 :TorontoWaterAsset)

# Class: :NavTree_015 (30. collection and system asset)

AnnotationAssertion(rdfs:label :NavTree_015 "30. collection and system asset")
SubClassOf(:NavTree_015 :NavTree_017)

# Class: :NavTree_016 (15. panel assets)

AnnotationAssertion(rdfs:label :NavTree_016 "15. panel assets")
SubClassOf(:NavTree_016 :TorontoWaterAsset)

# Class: :NavTree_017 (20. GENERIC CROSS-DOMAIN ASSET)

AnnotationAssertion(rdfs:label :NavTree_017 "20. GENERIC CROSS-DOMAIN ASSET")
SubClassOf(:NavTree_017 :TorontoWaterAsset)

# Class: :NavTree_018 (#. frequently encountered instrumentation)

AnnotationAssertion(rdfs:label :NavTree_018 "#. frequently encountered instrumentation")
SubClassOf(:NavTree_018 :NavTree_001)
SubClassOf(:NavTree_018 :sensingAsset)

# Class: :NavTree_019 (#. chemical or biological treatment)

AnnotationAssertion(rdfs:isDefinedBy :NavTree_019 "a water treatment asset that performs the treatment by faciliting a chemical or biochemical change.")
AnnotationAssertion(rdfs:label :NavTree_019 "#. chemical or biological treatment")
SubClassOf(:NavTree_019 :NavTree_003)

# Class: :NavTree_020 (#. reactor, specific to water treatment)

AnnotationAssertion(rdfs:label :NavTree_020 "#. reactor, specific to water treatment"@en)
SubClassOf(:NavTree_020 :NavTree_019)
SubClassOf(:NavTree_020 :reactor)

# Class: :NavTree_021 (#. filtration treatment)

AnnotationAssertion(rdfs:label :NavTree_021 "#. filtration treatment")
SubClassOf(:NavTree_021 :NavTree_003)

# Class: :NavTree_022 (#. odour or air pollution control)

AnnotationAssertion(rdfs:label :NavTree_022 "#. odour or air pollution control")
SubClassOf(:NavTree_022 :NavTree_003)

# Class: :NavTree_023 (#. solids or suspension separation)

AnnotationAssertion(rdfs:label :NavTree_023 "#. solids or suspension separation")
SubClassOf(:NavTree_023 :NavTree_003)

# Class: :NavTree_024 (#. solids processing)

AnnotationAssertion(rdfs:label :NavTree_024 "#. solids processing")
SubClassOf(:NavTree_024 :NavTree_003)

# Class: :NavTree_025 (#. thickening or dewatering)

AnnotationAssertion(rdfs:label :NavTree_025 "#. thickening or dewatering")
SubClassOf(:NavTree_025 :NavTree_003)

# Class: :NavTree_028 (#. coarse solids removal asset)

AnnotationAssertion(rdfs:label :NavTree_028 "#. coarse solids removal asset")
SubClassOf(:NavTree_028 :NavTree_003)

# Class: :Regionalized_System (regionalized system)

AnnotationAssertion(rdfs:isDefinedBy :Regionalized_System "Feb4th'24 TH: used to be call localized system")
AnnotationAssertion(rdfs:isDefinedBy :Regionalized_System "a system in which all assets playing the same functional role are situated in the same region of the system topology.")
AnnotationAssertion(rdfs:label :Regionalized_System "regionalized system")
SubClassOf(:Regionalized_System :flowIntegratedSystem)
DisjointClasses(:Regionalized_System :distributedSystem)
DisjointClasses(:Regionalized_System :systemTrain)

# Class: :SCADA_terminal (:SCADA_terminal)

SubClassOf(:SCADA_terminal :computer)
SubClassOf(:SCADA_terminal :informationIOutputDevice)

# Class: :TorontoWaterAsset (----Toronto Water Asset Class-----)

AnnotationAssertion(rdfs:label :TorontoWaterAsset "----Toronto Water Asset Class-----")
SubClassOf(:TorontoWaterAsset :asset)

# Class: :UPS (:UPS)

SubClassOf(:UPS :NavTree_005)
SubClassOf(:UPS :discreteAsset)

# Class: :UV_disinfectionAssembly (:UV_disinfectionAssembly)

SubClassOf(:UV_disinfectionAssembly :discreteAsset)
SubClassOf(:UV_disinfectionAssembly :reactorComponent)

# Class: :UV_disinfectionLampUnit (:UV_disinfectionLampUnit)

SubClassOf(:UV_disinfectionLampUnit :discreteAsset)
SubClassOf(:UV_disinfectionLampUnit :reactorComponent)

# Class: :aPowerDesc (:aPowerDesc)

SubClassOf(:aPowerDesc :assetDescription)

# Class: :aPressureDesc (:aPressureDesc)

SubClassOf(:aPressureDesc :assetDescription)

# Class: :aTemperatureDesc (:aTemperatureDesc)

SubClassOf(:aTemperatureDesc :assetDescription)

# Class: :aVoltageDesc (:aVoltageDesc)

SubClassOf(:aVoltageDesc :assetDescription)

# Class: :aVolumetricCapacityDesc (:aVolumetricCapacityDesc)

SubClassOf(:aVolumetricCapacityDesc :assetDescription)

# Class: :abovegroundFuelOilTank_TEMP (:abovegroundFuelOilTank_TEMP)

AnnotationAssertion(:notionMappingID :abovegroundFuelOilTank_TEMP "420e434923b848fabad3492f3a2fc981")
EquivalentClasses(:abovegroundFuelOilTank_TEMP ObjectIntersectionOf(:fuelOilTank DataHasValue(:isAboveGround "true"^^xsd:boolean)))

# Class: :abovegroundFuelTank_TEMP (:abovegroundFuelTank_TEMP)

AnnotationAssertion(:notionMappingID :abovegroundFuelTank_TEMP "f6a5a26efef34b9d967e390024b800c4")
EquivalentClasses(:abovegroundFuelTank_TEMP ObjectIntersectionOf(:fuelTank DataHasValue(:isAboveGround "true"^^xsd:boolean)))

# Class: :actuator (:actuator)

SubClassOf(:actuator :discreteAsset)
SubClassOf(:actuator :mechanicalEnergyOrMotion)

# Class: :aerationTank (aeration tank)

AnnotationAssertion(rdfs:label :aerationTank "aeration tank")
SubClassOf(:aerationTank :NavTree_020)
SubClassOf(:aerationTank :discreteAsset)

# Class: :airCondition (:airCondition)

SubClassOf(:airCondition :airConditioning)

# Class: :airConditioning (#. air conditioning (cooling))

AnnotationAssertion(rdfs:label :airConditioning "#. air conditioning (cooling)")
SubClassOf(:airConditioning :NavTree_006)

# Class: :airDamper (:airDamper)

AnnotationAssertion(:dev-PropertyNote :airDamper "from P&ID symbols: motorized, back draft damper, fire damper")
SubClassOf(:airDamper :NavTree_006)
SubClassOf(:airDamper :discreteAsset)
SubClassOf(:airDamper :flowOrPressureControlAsset)

# Class: :airDryer (:airDryer)

SubClassOf(:airDryer :dryer)

# Class: :airDuctSegment (:airDuctSegment)

SubClassOf(:airDuctSegment :LinearSegmentAsset)

# Class: :airExchangerUnit (:airExchangerUnit)

AnnotationAssertion(:AvClassEquivalent :airExchangerUnit "Air Exchanger Unit")
SubClassOf(:airExchangerUnit :NavTree_006)
SubClassOf(:airExchangerUnit :discreteAsset)

# Class: :airFilterCartrige (:airFilterCartrige)

SubClassOf(:airFilterCartrige :NavTree_006)
SubClassOf(:airFilterCartrige :discreteAsset)
SubClassOf(:airFilterCartrige :materialProcessingAsset)

# Class: :airFiltrationUnit (:airFiltrationUnit)

SubClassOf(:airFiltrationUnit :NavTree_006)
SubClassOf(:airFiltrationUnit :discreteAsset)
SubClassOf(:airFiltrationUnit :materialProcessingAsset)

# Class: :airHandler (:airHandler)

AnnotationAssertion(:AvClassEquivalent :airHandler "Air Handling Unit")
SubClassOf(:airHandler :NavTree_006)
SubClassOf(:airHandler :discreteAsset)

# Class: :airScrubber (:airScrubber)

SubClassOf(:airScrubber :NavTree_022)
SubClassOf(:airScrubber :discreteAsset)
SubClassOf(:airScrubber :respiratoryHazardProtection)

# Class: :analyzer (:analyzer)

AnnotationAssertion(:AvClassEquivalent :analyzer "Analyzer")
SubClassOf(:analyzer :discreteAsset)
SubClassOf(:analyzer :informationProcessingOrAnalysis)

# Class: :annunciatorPanel (:annunciatorPanel)

SubClassOf(:annunciatorPanel :discreteAsset)
SubClassOf(:annunciatorPanel :informationIOutputDevice)

# Class: :applicationServerAppliance (:applicationServerAppliance)

AnnotationAssertion(:classTree-excludeFromBranch :applicationServerAppliance :informationProcessingOrAnalysis)
SubClassOf(:applicationServerAppliance :computer)
SubClassOf(:applicationServerAppliance :serverAppliance)

# Class: :area (area)

AnnotationAssertion(rdfs:label :area "area"@en)
SubClassOf(:area :dimension)

# Class: :ashLagoon (:ashLagoon)

SubClassOf(:ashLagoon :NavTree_003)
SubClassOf(:ashLagoon :discreteAsset)

# Class: :asset (Asset)

AnnotationAssertion(rdfs:comment :asset "The function of an asset is to be realized continuously or repeatedly, which differs from consumables materials. The function of consumable materials is realized only once.
An asset is not always associated with a market value – some assets’ market value may have depreciated to nothing.  However, the assets may continue to provide capabilities useful to Toronto Water. The capability, if lost, is associated with a cost to replace.")
AnnotationAssertion(rdfs:isDefinedBy :asset "a material entity owned by a person or organization that possesses
* functions useful for its owner's goal
* and/or monetary value")
AnnotationAssertion(rdfs:label :asset "Asset")

# Class: :assetDescription (asset specification)

AnnotationAssertion(rdfs:isDefinedBy :assetDescription "a description of the capability of an asset or a product-line of assets.")
AnnotationAssertion(rdfs:label :assetDescription "asset specification")
SubClassOf(:assetDescription :description)

# Class: :assetManufacturer (asset manufacturer)

AnnotationAssertion(rdfs:label :assetManufacturer "asset manufacturer"@en)
SubClassOf(:assetManufacturer :organization)

# Class: :assetOwner (asset owner)

AnnotationAssertion(rdfs:label :assetOwner "asset owner")
SubClassOf(:assetOwner :organization)

# Class: :assetRole (asset role)

AnnotationAssertion(rdfs:label :assetRole "asset role"@en)
SubClassOf(:assetRole :role)

# Class: :assetStatus (asset status)

AnnotationAssertion(rdfs:label :assetStatus "asset status"@en)
SubClassOf(:assetStatus :definedState)

# Class: :atomicLevelWork (:atomicLevelWork)

SubClassOf(:atomicLevelWork :work)

# Class: :audibleAlarm (:audibleAlarm)

AnnotationAssertion(:AvClassEquivalent :audibleAlarm "Alarm")
SubClassOf(:audibleAlarm :discreteAsset)
SubClassOf(:audibleAlarm :informationIOutputDevice)

# Class: :automaticExternalDefibrillator (:automaticExternalDefibrillator)

SubClassOf(:automaticExternalDefibrillator :discreteAsset)
SubClassOf(:automaticExternalDefibrillator :firstAidEquipment)

# Class: :backflowPreventer (:backflowPreventer)

AnnotationAssertion(:AvClassEquivalent :backflowPreventer "Back Flow Preventer")
AnnotationAssertion(:notionMappingID :backflowPreventer "820677d0c7e44520a83d328e2e371d97")
SubClassOf(:backflowPreventer :NavTree_002)
SubClassOf(:backflowPreventer :discreteAsset)
SubClassOf(:backflowPreventer :flowOrPressureControlAsset)
SubClassOf(:backflowPreventer :valve)

# Class: :bandSaw (:bandSaw)

SubClassOf(:bandSaw :machineShopTool)

# Class: :barScreenUnit (:barScreenUnit)

SubClassOf(:barScreenUnit :NavTree_028)
SubClassOf(:barScreenUnit :discreteAsset)

# Class: :batteryBank (:batteryBank)

AnnotationAssertion(:AvClassEquivalent :batteryBank "Battery")
SubClassOf(:batteryBank :NavTree_005)
SubClassOf(:batteryBank :discreteAsset)

# Class: :batteryCharger (:batteryCharger)

SubClassOf(:batteryCharger :NavTree_005)
SubClassOf(:batteryCharger :discreteAsset)

# Class: :batteryUnit (:batteryUnit)

AnnotationAssertion(:AvClassEquivalent :batteryUnit "Battery")
SubClassOf(:batteryUnit :NavTree_005)
SubClassOf(:batteryUnit :discreteAsset)

# Class: :bearing (:bearing)

SubClassOf(:bearing :NavTree_009)
SubClassOf(:bearing :discreteAsset)

# Class: :beingAPartOfThe (being a part of)

AnnotationAssertion(rdfs:label :beingAPartOfThe "being a part of"@en)
SubClassOf(:beingAPartOfThe :relationalState)

# Class: :belt (:belt)

SubClassOf(:belt :NavTree_009)
SubClassOf(:belt :discreteAsset)

# Class: :beltConveyor (:beltConveyor)

SubClassOf(:beltConveyor :conveyor)

# Class: :beltPress (:beltPress)

SubClassOf(:beltPress :dewateringPress)

# Class: :biogas (:biogas)

SubClassOf(:biogas :combustableMaterial)
SubClassOf(:biogas :gaseousMaterial)

# Class: :bioreactor (:bioreactor)

SubClassOf(:bioreactor :genericReactor)

# Class: :bioreactorMediumCartridgeOrCassette (:bioreactorMediumCartridgeOrCassette)

SubClassOf(:bioreactorMediumCartridgeOrCassette :unitOfBioreactorMedium)

# Class: :bioswale (:bioswale)

SubClassOf(:bioswale :NavTree_013)

# Class: :blowerOrFan (:blowerOrFan)

AnnotationAssertion(:AvClassEquivalent :blowerOrFan "Blower")
AnnotationAssertion(:dev-PropertyNote :blowerOrFan "from P&ID symbol: axial, centrifugal")
SubClassOf(:blowerOrFan :NavTree_001)
SubClassOf(:blowerOrFan :conveyanceOfMaterialFlow)
SubClassOf(:blowerOrFan :discreteAsset)

# Class: :boat (:boat)

AnnotationAssertion(:AvClassEquivalent :boat "Boat")
SubClassOf(:boat :NavTree_011)
SubClassOf(:boat :discreteAsset)

# Class: :bodyMaterial (:bodyMaterial)

SubClassOf(:bodyMaterial :quality)

# Class: :boiler (:boiler)

AnnotationAssertion(:AvClassEquivalent :boiler "Boiler")
AnnotationAssertion(:notionMappingID :boiler "3d186d6bc9cb4c70987f7e85f2ff1871")
SubClassOf(:boiler :NavTree_001)
SubClassOf(:boiler :NavTree_006)
SubClassOf(:boiler :discreteAsset)
SubClassOf(:boiler :heatingOrCoolingAsset)

# Class: :boilerFitting (:boilerFitting)

AnnotationAssertion(:notionMappingID :boilerFitting "5fa540fcf96d46719f000b7ef9d14c9d")
AnnotationAssertion(rdfs:isDefinedBy :boilerFitting "a valve, gauge, regulating or controlling device, flange, pipe fitting, nozzle, or thing that is attached to or forms part of a boiler, pressure vessel, or pressure piping system.")
SubClassOf(:boilerFitting :NavTree_009)
SubClassOf(:boilerFitting :discreteAsset)

# Class: :breaker (:breaker)

AnnotationAssertion(:AvClassEquivalent :breaker "Circuit Breaker")
SubClassOf(:breaker :NavTree_001)
SubClassOf(:breaker :discreteAsset)

# Class: :bridge (:bridge)

SubClassOf(:bridge :NavTree_008)
SubClassOf(:bridge :discreteAsset)

# Class: :building (:building)

AnnotationAssertion(:AvClassEquivalent :building "Building")
AnnotationAssertion(rdfs:comment :building "This definition allows for portable buildings to be classified as building")
AnnotationAssertion(rdfs:isDefinedBy :building "A structure with a roof and some walls that partition its interior space from the outdoor space and stands in one place when it is used.")
SubClassOf(:building :NavTree_008)
SubClassOf(:building :discreteAsset)

# Class: :buildingAutomationSystemController (:buildingAutomationSystemController)

AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#altLabel> :buildingAutomationSystemController "BAS")
SubClassOf(:buildingAutomationSystemController :NavTree_006)
SubClassOf(:buildingAutomationSystemController :NavTree_007)
SubClassOf(:buildingAutomationSystemController :discreteAsset)

# Class: :burner (:burner)

SubClassOf(:burner :discreteAsset)
SubClassOf(:burner :heatingOrCoolingAsset)
SubClassOf(:burner :materialProcessingAsset)

# Class: :burnerComponent (:burnerComponent)

AnnotationAssertion(rdfs:comment :burnerComponent "The component of another asset such as a boiler or incinerator.")
SubClassOf(:burnerComponent :burner)

# Class: :cableSegment (:cableSegment)

SubClassOf(:cableSegment :LinearSegmentAsset)
SubClassOf(:cableSegment :NavTree_005)
SubClassOf(:cableSegment :discreteAsset)

# Class: :capability (function)

AnnotationAssertion(rdfs:comment :capability "TH Mar'24: property related to what something is able to do or tolerate.")
AnnotationAssertion(rdfs:label :capability "function")
SubClassOf(:capability :propertyState)

# Class: :capacitor (:capacitor)

SubClassOf(:capacitor :NavTree_005)
SubClassOf(:capacitor :discreteAsset)

# Class: :cardReader (:cardReader)

SubClassOf(:cardReader :entryAccessControlUnit)

# Class: :catchBasin (:catchBasin)

SubClassOf(:catchBasin :NavTree_002)
SubClassOf(:catchBasin :discreteAsset)

# Class: :category_G_boilerFitting (:category_G_boilerFitting)

AnnotationAssertion(:classTree-inclusion :category_G_boilerFitting "false"^^xsd:boolean)
AnnotationAssertion(rdfs:isDefinedBy :category_G_boilerFitting "CSA B51-19, Table 1: Certified capacity-rated pressure relief devices acceptable as primary overpressure protection on boilers, pressure vessels and pressure piping, and fusible plugs")
SubClassOf(:category_G_boilerFitting :boilerFitting)

# Class: :centrifuge (:centrifuge)

SubClassOf(:centrifuge :discreteAsset)
SubClassOf(:centrifuge :materialProcessingAsset)

# Class: :chainAndFlightCollector (:chainAndFlightCollector)

SubClassOf(:chainAndFlightCollector :collectorMecahanism)

# Class: :chamber (:chamber)

SubClassOf(:chamber :NavTree_002)
SubClassOf(:chamber :discreteAsset)

# Class: :channelSegment (:channelSegment)

SubClassOf(:channelSegment :LinearSegmentAsset)

# Class: :checkValve (:checkValve)

SubClassOf(:checkValve :valve)

# Class: :chemicalContactTank (:chemicalContactTank)

SubClassOf(:chemicalContactTank :chemicalDosingSystemOrComponentAsset)
SubClassOf(:chemicalContactTank :discreteAsset)
SubClassOf(:chemicalContactTank :materialAdditionOrFeedingAsset)

# Class: :chemicalDosingSystemOrComponentAsset (#. chemical dosing system or component)

AnnotationAssertion(rdfs:label :chemicalDosingSystemOrComponentAsset "#. chemical dosing system or component")
SubClassOf(:chemicalDosingSystemOrComponentAsset :NavTree_019)

# Class: :chemicalProtection (#. chemical protection)

AnnotationAssertion(rdfs:label :chemicalProtection "#. chemical protection")
SubClassOf(:chemicalProtection :NavTree_004)

# Class: :chemicalReactor (:chemicalReactor)

SubClassOf(:chemicalReactor :genericReactor)

# Class: :chemicalStorageTank (:chemicalStorageTank)

SubClassOf(:chemicalStorageTank :chemicalDosingSystemOrComponentAsset)
SubClassOf(:chemicalStorageTank :storageTank)

# Class: :chemicalSuit (:chemicalSuit)

SubClassOf(:chemicalSuit :chemicalProtection)
SubClassOf(:chemicalSuit :discreteAsset)

# Class: :chiller (:chiller)

SubClassOf(:chiller :discreteAsset)
SubClassOf(:chiller :heatingOrCoolingAsset)

# Class: :chillerCondenser (:chillerCondenser)

SubClassOf(:chillerCondenser :discreteAsset)
SubClassOf(:chillerCondenser :heatingOrCoolingAsset)
SubClassOf(:chillerCondenser ObjectSomeValuesFrom(:isPhysicalPartOf :chiller))

# Class: :chillerEvaporator (:chillerEvaporator)

SubClassOf(:chillerEvaporator :discreteAsset)
SubClassOf(:chillerEvaporator :heatingOrCoolingAsset)
SubClassOf(:chillerEvaporator ObjectSomeValuesFrom(:isPhysicalPartOf :chiller))

# Class: :chlorinatorSystem (:chlorinatorSystem)

AnnotationAssertion(:dev-PropertyNote :chlorinatorSystem "DiscreteModular? System?")
SubClassOf(:chlorinatorSystem :chemicalDosingSystemOrComponentAsset)

# Class: :chlorineAnalyzer (:chlorineAnalyzer)

SubClassOf(:chlorineAnalyzer :dissolvedChemicalAnalyzer)

# Class: :cityByLaw (:cityByLaw)

SubClassOf(:cityByLaw :informationContentEntity)

# Class: :clarifier (:clarifier)

SubClassOf(:clarifier :NavTree_023)
SubClassOf(:clarifier :discreteAsset)
SubClassOf(:clarifier ObjectSomeValuesFrom(:hasPhysicalPart :structuralTank))

# Class: :classifier (:classifier)

AnnotationAssertion(:classTree-excludeFromBranch :classifier :genericCrossDomainAsset)
SubClassOf(:classifier :NavTree_023)
SubClassOf(:classifier :treatmentSeparator)

# Class: :coagulationAndFlocculationTank (:coagulationAndFlocculationTank)

SubClassOf(:coagulationAndFlocculationTank :NavTree_020)
SubClassOf(:coagulationAndFlocculationTank ObjectIntersectionOf(ObjectSomeValuesFrom(:hasPhysicalPart :coagulationTank) ObjectSomeValuesFrom(:hasPhysicalPart :flocculationTank)))

# Class: :coagulationTank (:coagulationTank)

SubClassOf(:coagulationTank :NavTree_020)
SubClassOf(:coagulationTank :NavTree_023)
SubClassOf(:coagulationTank :discreteAsset)

# Class: :collectionOfAssets (Collection of Assets)

AnnotationAssertion(rdfs:comment :collectionOfAssets "A set of assets, whose membership in the set is either implicitly defined(e.g., being a part of a discrete asset) or expplicitly defined (e.g. define by the statement \"all the chairs on the 18th floor).")
AnnotationAssertion(rdfs:label :collectionOfAssets "Collection of Assets")
SubClassOf(:collectionOfAssets :asset)

# Class: :collectionOfThings (Collection of Things)

AnnotationAssertion(rdfs:isDefinedBy :collectionOfThings "The collection of all entities (e.g., asset, spaces, group of people) unified by a definition, which specifies the necessary conditions for each entity to qualify as a member of the collection.")
AnnotationAssertion(rdfs:label :collectionOfThings "Collection of Things")

# Class: :collectorMecahanism (:collectorMecahanism)

SubClassOf(:collectorMecahanism :NavTree_023)

# Class: :combustableMaterial (:combustableMaterial)

SubClassOf(:combustableMaterial :material)

# Class: :combustionTurbine (:combustionTurbine)

SubClassOf(:combustionTurbine :discreteAsset)
SubClassOf(:combustionTurbine :mechanicalEnergyOrMotion)

# Class: :compactor (:compactor)

SubClassOf(:compactor :NavTree_003)
SubClassOf(:compactor :discreteAsset)
SubClassOf(:compactor :materialProcessingAsset)

# Class: :compressedGasCylinder (:compressedGasCylinder)

SubClassOf(:compressedGasCylinder :MaterialStorageOrSurgeSuppressionAsset)
SubClassOf(:compressedGasCylinder :discreteAsset)

# Class: :compressor (:compressor)

SubClassOf(:compressor :NavTree_001)
SubClassOf(:compressor :conveyanceOfMaterialFlow)
SubClassOf(:compressor :discreteAsset)
SubClassOf(:compressor :flowOrPressureControlAsset)

# Class: :computer (:computer)

SubClassOf(:computer :discreteAsset)
SubClassOf(:computer :informationProcessingOrAnalysis)

# Class: :condensateTrap (:condensateTrap)

SubClassOf(:condensateTrap :NavTree_006)
SubClassOf(:condensateTrap :discreteAsset)
SubClassOf(:condensateTrap :processPipeSegment)

# Class: :conductivityAnalyzer (:conductivityAnalyzer)

SubClassOf(:conductivityAnalyzer :discreteAsset)

# Class: :constructedOilGreaseSeparator (:constructedOilGreaseSeparator)

SubClassOf(:constructedOilGreaseSeparator :oilGreaseSeperator)

# Class: :containingA (containing)

AnnotationAssertion(rdfs:label :containingA "containing"@en)
SubClassOf(:containingA :relationalState)

# Class: :contentCompilation (content compilation)

AnnotationAssertion(rdfs:label :contentCompilation "content compilation"@en)
SubClassOf(:contentCompilation :informationContentEntity)

# Class: :contentSubject (content subject)

AnnotationAssertion(rdfs:label :contentSubject "content subject"@en)
SubClassOf(:contentSubject :informationContentEntity)

# Class: :contentSummary (content summary)

AnnotationAssertion(rdfs:label :contentSummary "content summary"@en)
SubClassOf(:contentSummary :informationContentEntity)

# Class: :controlledAccessBarrier (:controlledAccessBarrier)

SubClassOf(:controlledAccessBarrier :discreteAsset)
SubClassOf(:controlledAccessBarrier :securityOrAccessControlAsset)

# Class: :controlledDoorAccess (:controlledDoorAccess)

SubClassOf(:controlledDoorAccess :NavTree_007)
SubClassOf(:controlledDoorAccess :discreteAsset)

# Class: :controller (:controller)

SubClassOf(:controller :discreteAsset)
SubClassOf(:controller :informationIOutputDevice)
SubClassOf(:controller :informationProcessingOrAnalysis)

# Class: :conveyanceOfMaterialFlow (01. conveyance of material flow)

AnnotationAssertion(rdfs:label :conveyanceOfMaterialFlow "01. conveyance of material flow")
SubClassOf(:conveyanceOfMaterialFlow :NavTree_017)

# Class: :conveyor (:conveyor)

SubClassOf(:conveyor :NavTree_001)
SubClassOf(:conveyor :conveyanceOfMaterialFlow)
SubClassOf(:conveyor :discreteAsset)
SubClassOf(:conveyor :liftingOrTransport)

# Class: :coolingTower (:coolingTower)

SubClassOf(:coolingTower :discreteAsset)
SubClassOf(:coolingTower :heatingOrCoolingAsset)

# Class: :corporatePolicy (corporate policy)

AnnotationAssertion(rdfs:label :corporatePolicy "corporate policy"@en)
SubClassOf(:corporatePolicy :contentSubject)

# Class: :correctiveWork (corrective work)

AnnotationAssertion(rdfs:label :correctiveWork "corrective work")
SubClassOf(:correctiveWork :workOrderLevelWork)

# Class: :counter (:counter)

SubClassOf(:counter :discreteAsset)
SubClassOf(:counter :informationProcessingOrAnalysis)

# Class: :crane (:crane)

AnnotationAssertion(:notionMappingID :crane "7215f0de0aaa42a7a9cb0d9b00e9a205")
AnnotationAssertion(rdfs:isDefinedBy :crane "CSA B167-16(R2021): a machine consisting of a brdge/girder, end trucks, and a hoisting mechanism for lifting a load vertically and moving it horizontally. where the hoisting mechanism is typically an integral part of the machine")
SubClassOf(:crane :discreteAsset)
SubClassOf(:crane :liftingOrTransport)

# Class: :culvert (:culvert)

SubClassOf(:culvert :NavTree_002)
SubClassOf(:culvert :NavTree_008)
SubClassOf(:culvert :discreteAsset)

# Class: :cycloneClassifier (:cycloneClassifier)

SubClassOf(:cycloneClassifier :classifier)

# Class: :damperActuator (:damperActuator)

SubClassOf(:damperActuator :NavTree_006)
SubClassOf(:damperActuator :actuator)

# Class: :definedCollectionOfAssets (Defined Collection of Assets)

AnnotationAssertion(rdfs:comment :definedCollectionOfAssets "e.g., all fire-doors in the admin building")
AnnotationAssertion(rdfs:label :definedCollectionOfAssets "Defined Collection of Assets")
SubClassOf(:definedCollectionOfAssets :NavTree_015)
SubClassOf(:definedCollectionOfAssets :collectionOfAssets)

# Class: :definedState (state)

AnnotationAssertion(rdfs:comment :definedState "Jan'24 TH: This class is create because we considered the status of a particular asset to be an instance of this class")
AnnotationAssertion(rdfs:comment :definedState "TH Dec/2023: a property that denote a composite of values in multiple qualities, functional capabiliy, and other possible property that inhere in the asset itself (not listed in this ontology).")
AnnotationAssertion(rdfs:label :definedState "state"@en)
SubClassOf(:definedState :propertyState)

# Class: :dehumidifier (:dehumidifier)

SubClassOf(:dehumidifier :NavTree_006)
SubClassOf(:dehumidifier :discreteAsset)

# Class: :descendingDevice (:descendingDevice)

AnnotationAssertion(:notionMappingID :descendingDevice "c60fe085f5634da29f57fbb69741b4ef")
AnnotationAssertion(rdfs:isDefinedBy :descendingDevice "CSA Z259.2.3:16: automatic or manual operated device used in conjunction with an appropriate descent line, which allows the user, either individually or assisted by another person, to achieve a descent with controllable velocity.")
SubClassOf(:descendingDevice :discreteAsset)
SubClassOf(:descendingDevice :fallProtectionEquipment)

# Class: :description (:description)

AnnotationAssertion(rdfs:comment :description "Feb'24 TH: possibly in competition for existence against state")
AnnotationAssertion(rdfs:comment :description "Mar'24: Now I am in favour of using the state representation over the description representaton")
AnnotationAssertion(rdfs:comment :description "REASON WHY SPECIFICATIONS SHOULD BE REIFIED:
1. PARTIALLY VALIDATED: This allows us to add more metadata. For example, who made the specification - i.e., Is it the consultant or the manufacturer? When was it made? Does it indicate required performance or specsheet performance?  If we cannot attach this information, we would have to specialize in many different types of relations. VALIDATION: Provenance metadata is only needed for some usecases. However, reification offers a way to distinguish between specification and observation, which is very helpful to avoid defining similar relations repetitively, for example instead of using isHolding and isSpecifiedToHold, use theSubstanceInContainment description instance either as a requirement or observation. 
2. REFUTED: This allows us to find all specifications for a given entity easily. (Instead of querying for object specifications and data specification separately) REFUTATION: one can list all properties of the entity using SPARQL
3. VALID:For numerical measurement specifications, having a reified entity allows us to attach the equivalent values in other units, such as specification in kg and lbs.
4. VALID: Allows the database to be operated like an append-only-ledger and in good accord with the datahub architecture. Boolean data value specifications like hasActuactor are simple, but if someone had made the wrong specification, we would have to retract them, removing this historical representation. 

DECISION:
1) Definitely use the class of description entities to record numeric properties (with UOM) or evolving properties (from capital projects and from the field). 
2) For some often used relations, like parthood, infer the value from the most current description and map to a hasPresentProperty relation (i.e. hasPart)
3) For non-numeric properties that are inherent to the entity and would virtually never change, such as NEMA frame type data property or isCreatedBy object property, it is highly optional to record them using an description instance.  Doing so has the advantage of traking data entry mistakes (and their consequences before they were correctly), however this is an obscure use-case for most organizations.")
AnnotationAssertion(rdfs:comment :description "The more generic term \"description\" is chosen over \"specification\" or \"observation\" so these can be used as both")
SubClassOf(:description :informationContentEntity)

# Class: :detentionTank (:detentionTank)

SubClassOf(:detentionTank :wetWeatherFlowStorage)

# Class: :dewateringCentrifuge (:dewateringCentrifuge)

SubClassOf(:dewateringCentrifuge :NavTree_025)
SubClassOf(:dewateringCentrifuge :centrifuge)
SubClassOf(:dewateringCentrifuge :discreteAsset)

# Class: :dewateringPress (:dewateringPress)

SubClassOf(:dewateringPress :NavTree_025)
SubClassOf(:dewateringPress :discreteAsset)

# Class: :diesel (:diesel)

SubClassOf(:diesel :fuelOil)
SubClassOf(:diesel :liquid)

# Class: :digesterGas (digester gas)

AnnotationAssertion(rdfs:comment :digesterGas "TH Dec/2023: intended to quantify instances of Functional Capability or Quality entity")
AnnotationAssertion(rdfs:label :digesterGas "digester gas"@en)
SubClassOf(:digesterGas :biogas)

# Class: :digesterTank (digester tank)

AnnotationAssertion(:notionMappingID :digesterTank "6b05951a956d4b0288df8f8b4211e78a")
AnnotationAssertion(rdfs:label :digesterTank "digester tank")
SubClassOf(:digesterTank :NavTree_020)
SubClassOf(:digesterTank :discreteAsset)

# Class: :dimension (dimension)

AnnotationAssertion(rdfs:label :dimension "dimension"@en)
SubClassOf(:dimension :quality)

# Class: :disconnectSwitch (:disconnectSwitch)

SubClassOf(:disconnectSwitch :NavTree_005)
SubClassOf(:disconnectSwitch :discreteAsset)

# Class: :discreteAsset (Discrete Asset)

AnnotationAssertion(:dev-ontologyNote :discreteAsset "Old Definition:

An asset whose parts are 
* unified, through physical integration, into a single object, or
* unified under their common membership in a collection of objects that constitutes a manufactured product")
AnnotationAssertion(rdfs:comment :discreteAsset "An asset may have smaller discrete assets in its set of parts.
A manufactured asset product is a set of assets made under the same specification, which is usually related to a certain product-line identification (i.e. manufacturer, model, catalogue number, etc.)
The asset that consists of a television and its remote control is an example of a discrete asset that is unified by a manufactured asset product, though it does not exist as a single physical unit.")
AnnotationAssertion(rdfs:isDefinedBy :discreteAsset "An asset whose parts are unified, through physical integration, into a single object.")
AnnotationAssertion(rdfs:label :discreteAsset "Discrete Asset"@en)
SubClassOf(:discreteAsset :asset)
DisjointClasses(:discreteAsset :systemOfDiscreteAssets)

# Class: :discreteAssetSystem (Discrete Asset System)

AnnotationAssertion(rdfs:comment :discreteAssetSystem "The vast majority of discrete assets have components, therefore they would be considered as discrete asset systems. The discrete asset that are not systems are all in one piece.  For example, a screw driver.")
AnnotationAssertion(rdfs:isDefinedBy :discreteAssetSystem "A system of asset parts that satisfy the criteria of discrete asset.")
AnnotationAssertion(rdfs:label :discreteAssetSystem "Discrete Asset System")
SubClassOf(:discreteAssetSystem :discreteAsset)
SubClassOf(:discreteAssetSystem :system)

# Class: :discreteCommercialProduct (Discrete Commercial Product)

AnnotationAssertion(rdfs:comment :discreteCommercialProduct "TH: 26Mar14: a Discrete Comercial Products are in most cases, discrete assets, but they may be a Collection of Assets - i.e System of Discrete Assets to be more precise.")
AnnotationAssertion(rdfs:isDefinedBy :discreteCommercialProduct "An asset whose parts are unified under their common membership in a collection of objects that constitutes a unit of a manufactured product")
AnnotationAssertion(rdfs:label :discreteCommercialProduct "Discrete Commercial Product")
SubClassOf(:discreteCommercialProduct :asset)

# Class: :disinfectionTank (:disinfectionTank)

SubClassOf(:disinfectionTank :discreteAsset)

# Class: :display (:display)

SubClassOf(:display :discreteAsset)
SubClassOf(:display :informationIOutputDevice)

# Class: :dissolvedChemicalAnalyzer (:dissolvedChemicalAnalyzer)

SubClassOf(:dissolvedChemicalAnalyzer :discreteAsset)

# Class: :dissolvedOxygenInstrumentation (:dissolvedOxygenInstrumentation)

SubClassOf(:dissolvedOxygenInstrumentation :discreteAsset)

# Class: :distributedSystem (Distributed System)

AnnotationAssertion(rdfs:isDefinedBy :distributedSystem "a system in a primary function is performed by assets occupying distinct positions that are distributed across different positions in its system topology.")
AnnotationAssertion(rdfs:label :distributedSystem "Distributed System")
SubClassOf(:distributedSystem :flowIntegratedSystem)

# Class: :distributionSystem (Distribution System)

AnnotationAssertion(rdfs:comment :distributionSystem "a distribution system would be mainly comprised of linear elements, which carries the resource over a distance, and conveyance assets, such as pumps, blowers, or conveyors.")
AnnotationAssertion(rdfs:isDefinedBy :distributionSystem "DRAFT: a system whose function is to distribute a resource from one or more sources to sites where they are needed.")
AnnotationAssertion(rdfs:label :distributionSystem "Distribution System")
SubClassOf(:distributionSystem :flowIntegratedSystem)

# Class: :documentContent (document content)

AnnotationAssertion(rdfs:label :documentContent "document content"@en)
SubClassOf(:documentContent :pieceOfContent)

# Class: :dosingPump (:dosingPump)

SubClassOf(:dosingPump :chemicalDosingSystemOrComponentAsset)
SubClassOf(:dosingPump :pump)

# Class: :drillPress (:drillPress)

SubClassOf(:drillPress :machineShopTool)

# Class: :drinkingWaterStorage (:drinkingWaterStorage)

SubClassOf(:drinkingWaterStorage :NavTree_002)

# Class: :driving (mechanical drive)

AnnotationAssertion(rdfs:label :driving "mechanical drive"@en)
SubClassOf(:driving :functionalCapability)

# Class: :dryPond (:dryPond)

SubClassOf(:dryPond :pond)

# Class: :dryer (:dryer)

AnnotationAssertion(:dev-PropertyNote :dryer "Desiccant Air Dryers (heated, heatless), Refrigerated Air Dryer, Membrane Air Dryer,")
SubClassOf(:dryer :discreteAsset)
SubClassOf(:dryer :materialProcessingAsset)

# Class: :dustCollector (:dustCollector)

SubClassOf(:dustCollector :NavTree_022)
SubClassOf(:dustCollector :discreteAsset)
SubClassOf(:dustCollector :materialProcessingAsset)

# Class: :easement (:easement)

SubClassOf(:easement :NavTree_002)
SubClassOf(:easement :discreteAsset)

# Class: :eductor (:eductor)

SubClassOf(:eductor :chemicalDosingSystemOrComponentAsset)
SubClassOf(:eductor :discreteAsset)
SubClassOf(:eductor :materialAdditionOrFeedingAsset)

# Class: :ejector (:ejector)

SubClassOf(:ejector :chemicalDosingSystemOrComponentAsset)

# Class: :electricalConduitSection (:electricalConduitSection)

SubClassOf(:electricalConduitSection :NavTree_005)
SubClassOf(:electricalConduitSection :discreteAsset)

# Class: :electricalCurrentInstrumentation (:electricalCurrentInstrumentation)

SubClassOf(:electricalCurrentInstrumentation :discreteAsset)
SubClassOf(:electricalCurrentInstrumentation :electricalInstrumentation)

# Class: :electricalDistributionOrMotorControlPanelAssets (:electricalDistributionOrMotorControlPanelAssets)

AnnotationAssertion(:AvClassEquivalent :electricalDistributionOrMotorControlPanelAssets "BUS bar greater than 750 volts")
AnnotationAssertion(:AvClassEquivalent :electricalDistributionOrMotorControlPanelAssets "Control Panel,MCC")
SubClassOf(:electricalDistributionOrMotorControlPanelAssets :NavTree_016)
SubClassOf(:electricalDistributionOrMotorControlPanelAssets :discreteAsset)

# Class: :electricalDuctBankSection (:electricalDuctBankSection)

SubClassOf(:electricalDuctBankSection :NavTree_005)
SubClassOf(:electricalDuctBankSection :discreteAsset)

# Class: :electricalInstrumentation (:electricalInstrumentation)

SubClassOf(:electricalInstrumentation :singleParameterInstrumentation)

# Class: :electricalSafety (#. electrical safety)

AnnotationAssertion(rdfs:label :electricalSafety "#. electrical safety")
SubClassOf(:electricalSafety :NavTree_004)

# Class: :electrostaticPrecipitator (:electrostaticPrecipitator)

SubClassOf(:electrostaticPrecipitator :discreteAsset)
SubClassOf(:electrostaticPrecipitator :separator)

# Class: :elevator (:elevator)

SubClassOf(:elevator :discreteAsset)
SubClassOf(:elevator :partOfBuildingOrStructure)

# Class: :emergencyEyewashOrShower (:emergencyEyewashOrShower)

SubClassOf(:emergencyEyewashOrShower :NavTree_004)
SubClassOf(:emergencyEyewashOrShower :discreteAsset)

# Class: :emergencyPowerSystem (:emergencyPowerSystem)

AnnotationAssertion(:notionMappingID :emergencyPowerSystem "f4731a88fff54178bb8c4f1073657749")
AnnotationAssertion(rdfs:isDefinedBy :emergencyPowerSystem "The system to provide emergency power including: emergency generator, ventilation and fuel supply.

Ontario Building Code:
... power supply capable of operating under a full load for not less than 2 h shall be
provided by an emergency generator for,
(a) every elevator serving storeys above the first storeyin a building that is more than 36 m high
measured between grade and the floor level of the top storey and every elevator for firefighters in
conformance with Sentence (2),
(b) water supply for firefighting in conformance with Article 3.2.5.7., if the supply is dependent on
electrical power supplied to the building, and the building is within the scope of Subsection 3.2.6.,
(c) fans and other electrical equipment that are installed to maintain the air quality specified in Article
3.2.6.2., and
(d) fans required for venting by Article 3.2.6.6.")
SubClassOf(:emergencyPowerSystem :system)

# Class: :emergencyWork (emergency work)

AnnotationAssertion(rdfs:label :emergencyWork "emergency work")
SubClassOf(:emergencyWork :workOrderLevelWork)

# Class: :endTruck (:endTruck)

AnnotationAssertion(:notionMappingID :endTruck "6249a4184d4445d59ed191877babc8d8")
AnnotationAssertion(rdfs:isDefinedBy :endTruck "End truck — a crane component that supgorts and carries the bridge girders or end ties of an overhead travelling crane, or the sill of a gantry crane.
Note: An end truck is usually constructed as a frame that houses wheels, bearings, and axles.")
SubClassOf(:endTruck :discreteAsset)
SubClassOf(:endTruck :liftingOrTransport)

# Class: :energyRecoveryVentilator (:energyRecoveryVentilator)

SubClassOf(:energyRecoveryVentilator :NavTree_006)
SubClassOf(:energyRecoveryVentilator :discreteAsset)

# Class: :engine (:engine)

SubClassOf(:engine :discreteAsset)
SubClassOf(:engine :mechanicalEnergyOrMotion)

# Class: :entryAccessControlUnit (:entryAccessControlUnit)

SubClassOf(:entryAccessControlUnit :discreteAsset)
SubClassOf(:entryAccessControlUnit :securityOrAccessControlAsset)

# Class: :environmentalHazard (environmenta hazard)

AnnotationAssertion(rdfs:label :environmentalHazard "environmenta hazard")
SubClassOf(:environmentalHazard :hazard)

# Class: :equipmentLocalControlPanelAssets (:equipmentLocalControlPanelAssets)

SubClassOf(:equipmentLocalControlPanelAssets :NavTree_016)
SubClassOf(:equipmentLocalControlPanelAssets :discreteAsset)

# Class: :event (Event)

AnnotationAssertion(rdfs:label :event "Event")

# Class: :expansionJoint (:expansionJoint)

SubClassOf(:expansionJoint :NavTree_010)
SubClassOf(:expansionJoint :discreteAsset)

# Class: :facility (Facility)

AnnotationAssertion(rdfs:isDefinedBy :facility "The collection of all assets located in a facility, spaces within the facility foundary, and organization of people who manage the facility.")
AnnotationAssertion(rdfs:label :facility "Facility")
SubClassOf(:facility :collectionOfThings)

# Class: :facilityProcessSystem (:facilityProcessSystem)

SubClassOf(:facilityProcessSystem :hierarchicalSystem)

# Class: :fallArrestDavitArm (:fallArrestDavitArm)

SubClassOf(:fallArrestDavitArm :discreteAsset)
SubClassOf(:fallArrestDavitArm :fallProtectionEquipment)

# Class: :fallArrestHarness (:fallArrestHarness)

AnnotationAssertion(:notionMappingID :fallArrestHarness "e9ecea6e400843ba9e874bff9378b22f")
SubClassOf(:fallArrestHarness :discreteAsset)
SubClassOf(:fallArrestHarness :fallProtectionEquipment)

# Class: :fallArrestRopeGrab (:fallArrestRopeGrab)

AnnotationAssertion(rdfs:isDefinedBy :fallArrestRopeGrab "CSA Z259.2.5-17: a component that
a) engages a vertical lifeline or rigid rail in the vertical or sloped plane;
b) accepts a connecting linkage;
c) can be moved along the lifeline or rail in accordance with the position of the worker;
d) automatically engages on the lifeline or rail in the event of a fall in order to arrest the fall; and
e) has a integral connecting means.")
SubClassOf(:fallArrestRopeGrab :discreteAsset)
SubClassOf(:fallArrestRopeGrab :fallProtectionEquipment)

# Class: :fallArrestSystem (:fallArrestSystem)

AnnotationAssertion(:notionMappingID :fallArrestSystem "d419b16212f340e797aa00e8ae3d50c8")
AnnotationAssertion(rdfs:isDefinedBy :fallArrestSystem "O.Reg 213/91: an assembly of components joined together so that when the assembly is connected to a fixed support, it is capable of arresting a worker’s fall
26.6 (1) modified: A fall arrest system shall consist of a full body harness with adequate attachment points and a lanyard equipped with a shock absorber or similar device, unless the shock absorber if wearing one could cause a worker to hit the ground or an object or level below the work")
SubClassOf(:fallArrestSystem :fallProtectionEquipment)
SubClassOf(:fallArrestSystem :functionalAssemblyOfComponents)

# Class: :fallProtectionDescendingDevice (:fallProtectionDescendingDevice)

AnnotationAssertion(rdfs:isDefinedBy :fallProtectionDescendingDevice "CSA Z259.2.3:16: automatic or manual operated device used in conjunction with an appropriate descent line, which allows the user, either individually or assisted by another person, to achieve a descent with controllable velocity.")
SubClassOf(:fallProtectionDescendingDevice :discreteAsset)
SubClassOf(:fallProtectionDescendingDevice :fallProtectionEquipment)

# Class: :fallProtectionEnergyAbsorber (:fallProtectionEnergyAbsorber)

AnnotationAssertion(rdfs:isDefinedBy :fallProtectionEnergyAbsorber "CSA Z259.11-17: any device that dissipates kinetic energy, limits deceleration force during fall arrest, and does not return kinetic energy to the system or into the human body.")
SubClassOf(:fallProtectionEnergyAbsorber :discreteAsset)
SubClassOf(:fallProtectionEnergyAbsorber :fallProtectionEquipment)

# Class: :fallProtectionEquipment (#. fall protection equipment)

AnnotationAssertion(rdfs:label :fallProtectionEquipment "#. fall protection equipment")
SubClassOf(:fallProtectionEquipment :NavTree_004)

# Class: :fallRestraintSystem (:fallRestraintSystem)

AnnotationAssertion(:notionMappingID :fallRestraintSystem "4e219f01e83d4268ad9a31818332e09a")
AnnotationAssertion(rdfs:isDefinedBy :fallRestraintSystem "O.Reg 213/91: means an assembly of components capable of restricting a worker’s movement on a work surface and preventing the worker from reaching a location from which he or she could fall.
26.4(1) A travel restraint system shall consist of a full body harness with adequate attachment points or a safety belt.
CSA Z259.1-05: an assembly of components that, when property assembled and used together and when connected to a suitable anchorage, prevents a worker from reaching an unprotected edge or opening where a fall could occur. A TRS is not intended for use as a work positioning system or Fall Arrest System.")
SubClassOf(:fallRestraintSystem :fallProtectionEquipment)
SubClassOf(:fallRestraintSystem :functionalAssemblyOfComponents)

# Class: :fallRestrictingSystem (:fallRestrictingSystem)

AnnotationAssertion(:notionMappingID :fallRestrictingSystem "b6b38579ad7a4d10ad0653bccd57ce16")
AnnotationAssertion(rdfs:isDefinedBy :fallRestrictingSystem "O.Reg 213/91:  a type of fall arrest system that has been designed to limit a worker’s fall to a specified distance.
25.6(1) A fall restricting system that is not designed for use in wood pole climbing shall consist of an assembly of components that is,
(a) attached to an independent fixed support that meets the requirements of section 26.7; and
(b) designed and arranged in accordance with the manufacturer’s instructions and so that a worker’s free fall distance does not exceed 0.6 metres.")
SubClassOf(:fallRestrictingSystem :fallArrestSystem)
SubClassOf(:fallRestrictingSystem :fallProtectionEquipment)

# Class: :federalRegulation (Canadian federal regulation)

AnnotationAssertion(rdfs:label :federalRegulation "Canadian federal regulation"@en)
SubClassOf(:federalRegulation :governmentRegulation)

# Class: :fenceSection (:fenceSection)

SubClassOf(:fenceSection :NavTree_007)
SubClassOf(:fenceSection :NavTree_008)
SubClassOf(:fenceSection :discreteAsset)

# Class: :figureContent (figure content)

AnnotationAssertion(rdfs:label :figureContent "figure content"@en)
SubClassOf(:figureContent :pieceOfContent)

# Class: :filterPress (:filterPress)

SubClassOf(:filterPress :dewateringPress)

# Class: :filter_MTD (:filter_MTD)

SubClassOf(:filter_MTD :manufacturedTreatmentDevice)

# Class: :filtrationTank (:filtrationTank)

SubClassOf(:filtrationTank :NavTree_021)
SubClassOf(:filtrationTank :discreteAsset)
SubClassOf(:filtrationTank ObjectSomeValuesFrom(:hasPhysicalPart :tankOrVessel))

# Class: :fireRatedDoor (:fireRatedDoor)

SubClassOf(:fireRatedDoor :discreteAsset)
SubClassOf(:fireRatedDoor :partOfBuildingOrStructure)

# Class: :firstAidEquipment (#. first-aid equipment)

AnnotationAssertion(rdfs:label :firstAidEquipment "#. first-aid equipment")
SubClassOf(:firstAidEquipment :NavTree_004)

# Class: :firstAidKit (:firstAidKit)

SubClassOf(:firstAidKit :discreteAsset)
SubClassOf(:firstAidKit :firstAidEquipment)

# Class: :firstAidRoomEquipmentSet (:firstAidRoomEquipmentSet)

SubClassOf(:firstAidRoomEquipmentSet :discreteAsset)
SubClassOf(:firstAidRoomEquipmentSet :firstAidEquipment)

# Class: :firstAidStationEquipmentSet (:firstAidStationEquipmentSet)

SubClassOf(:firstAidStationEquipmentSet :discreteAsset)
SubClassOf(:firstAidStationEquipmentSet :firstAidEquipment)

# Class: :fixedGasDetector (:fixedGasDetector)

AnnotationAssertion(:classTree-excludeFromBranch :fixedGasDetector :genericCrossDomainAsset)
SubClassOf(:fixedGasDetector :discreteAsset)
SubClassOf(:fixedGasDetector :gaseousChemicalAndAirQualityInstrumentation)
SubClassOf(:fixedGasDetector :hazardousGasMonitoringDevice)

# Class: :fixedLadder (:fixedLadder)

AnnotationAssertion(:notionMappingID :fixedLadder "20fd58dbecb7487ba70b8c577d3be64a")
SubClassOf(:fixedLadder :ladder)
SubClassOf(:fixedLadder :partOfBuildingOrStructure)

# Class: :flameArrestor (:flameArrestor)

SubClassOf(:flameArrestor :discreteAsset)
SubClassOf(:flameArrestor :pressureReliefOrExplosionPrevention)

# Class: :flameOrCombustionInstrumentation (:flameOrCombustionInstrumentation)

SubClassOf(:flameOrCombustionInstrumentation :discreteAsset)
SubClassOf(:flameOrCombustionInstrumentation :singleParameterInstrumentation)

# Class: :floatationEquipment (#. floatation equipment)

AnnotationAssertion(rdfs:label :floatationEquipment "#. floatation equipment")
SubClassOf(:floatationEquipment :NavTree_004)

# Class: :flocculationTank (:flocculationTank)

SubClassOf(:flocculationTank :NavTree_020)

# Class: :flowIntegratedSystem (Flow Integrated System)

AnnotationAssertion(rdfs:isDefinedBy :flowIntegratedSystem "a system that is integrated by lines or wireless links, carrying flows of substance, energy, or signal.")
AnnotationAssertion(rdfs:label :flowIntegratedSystem "Flow Integrated System")
SubClassOf(:flowIntegratedSystem :systemOfDiscreteAssets)
DisjointClasses(:flowIntegratedSystem :functionalAssemblyOfComponents)

# Class: :flowOrPressureControlAsset (02. flow or pressure control)

AnnotationAssertion(rdfs:label :flowOrPressureControlAsset "02. flow or pressure control")
SubClassOf(:flowOrPressureControlAsset :NavTree_017)

# Class: :flowSensingElement (:flowSensingElement)

SubClassOf(:flowSensingElement :NavTree_018)

# Class: :flowmeter (:flowmeter)

AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#altLabel> :flowmeter "flow transmitter")
SubClassOf(:flowmeter :NavTree_018)

# Class: :fluidizedBedIncinerator (:fluidizedBedIncinerator)

SubClassOf(:fluidizedBedIncinerator :incinerator)

# Class: :forklift (:forklift)

SubClassOf(:forklift :mobileLift)

# Class: :fuel (:fuel)

SubClassOf(:fuel :combustableMaterial)

# Class: :fuelAppliance (:fuelAppliance)

AnnotationAssertion(rdfs:isDefinedBy :fuelAppliance "a device used to convert fuel into energy.")
SubClassOf(:fuelAppliance :discreteAsset)

# Class: :fuelOil (:fuelOil)

SubClassOf(:fuelOil :fuel)
SubClassOf(:fuelOil :liquid)

# Class: :fuelOilAppliance (:fuelOilAppliance)

AnnotationAssertion(:notionMappingID :fuelOilAppliance "82537133b8f24fe1870c2457c6212b4f")
AnnotationAssertion(rdfs:isDefinedBy :fuelOilAppliance "O. Reg 212/01: “appliance” means a device that consumes or is intended to consume a gas and includes all valves, fittings, controls and components attached or to be attached to it.
CSA 149.2: a device to convert gas into energy or compress gas for the purpose of fuelling; the term includes any component, control, wiring, piping, or tubing required to be part of the device.")
SubClassOf(:fuelOilAppliance :fuelAppliance)

# Class: :fuelOilTank (:fuelOilTank)

AnnotationAssertion(:notionMappingID :fuelOilTank "346427579fb94e93a6f40ac6620ed2b0")
EquivalentClasses(:fuelOilTank ObjectIntersectionOf(:fuelTank ObjectSomeValuesFrom(:isDesignedToHold :fuelOil)))

# Class: :fuelPipingSystem (:fuelPipingSystem)

AnnotationAssertion(:notionMappingID :fuelPipingSystem "2176ff53fd794671b03ffae50c930345")
SubClassOf(:fuelPipingSystem :pipingSystem)

# Class: :fuelTank (fuel tank)

AnnotationAssertion(:notionMappingID :fuelTank "7260475a6c0a49ca85670e37ae82dfdc")
AnnotationAssertion(rdfs:label :fuelTank "fuel tank")
EquivalentClasses(:fuelTank ObjectIntersectionOf(:storageTank ObjectSomeValuesFrom(:isDesignedToHold :fuel)))

# Class: :functionalAssemblyOfComponents (Functional Assembly of Components)

AnnotationAssertion(rdfs:comment :functionalAssemblyOfComponents "This is to say that the assembly's parts (and all of its parts) are not sufficiently physically unified to allow it to be moved around as a unit.")
AnnotationAssertion(rdfs:isDefinedBy :functionalAssemblyOfComponents "A system comprising physically integrated discrete parts that is not itself a discrete asset.")
AnnotationAssertion(rdfs:label :functionalAssemblyOfComponents "Functional Assembly of Components")
SubClassOf(:functionalAssemblyOfComponents :systemOfDiscreteAssets)

# Class: :functionalCapability (:functionalCapability)

SubClassOf(:functionalCapability :capability)

# Class: :furnace (:furnace)

SubClassOf(:furnace :discreteAsset)
SubClassOf(:furnace :heatingOrCoolingAsset)

# Class: :fuse (:fuse)

SubClassOf(:fuse :NavTree_005)
SubClassOf(:fuse :discreteAsset)

# Class: :fusiblePlug (:fusiblePlug)

SubClassOf(:fusiblePlug :pressureReliefDevice)

# Class: :gasAppliance (:gasAppliance)

AnnotationAssertion(:notionMappingID :gasAppliance "6fb4bd445ab8441d8557e738d70edafe")
AnnotationAssertion(rdfs:isDefinedBy :gasAppliance "CSA B139: a device used to convert fuel into energy. Note: This term includes all components, controls, wiring, and piping required as part of the device by the applicable standard")
SubClassOf(:gasAppliance :fuelAppliance)

# Class: :gasDiffuser (:gasDiffuser)

SubClassOf(:gasDiffuser :discreteAsset)
SubClassOf(:gasDiffuser :reactorComponent)

# Class: :gasDiffuserGridAssembly (:gasDiffuserGridAssembly)

SubClassOf(:gasDiffuserGridAssembly :discreteAsset)

# Class: :gasHolder (:gasHolder)

SubClassOf(:gasHolder :tankOrVessel)

# Class: :gaseousChemicalAndAirQualityInstrumentation (:gaseousChemicalAndAirQualityInstrumentation)

SubClassOf(:gaseousChemicalAndAirQualityInstrumentation :singleParameterInstrumentation)

# Class: :gaseousMaterial (gaseous material)

AnnotationAssertion(rdfs:label :gaseousMaterial "gaseous material")
SubClassOf(:gaseousMaterial :material)

# Class: :gasoline (:gasoline)

SubClassOf(:gasoline :fuel)
SubClassOf(:gasoline :liquid)

# Class: :gasolineTank (:gasolineTank)

SubClassOf(:gasolineTank :fuelTank)
SubClassOf(:gasolineTank ObjectSomeValuesFrom(:isDesignedToHold :gasoline))

# Class: :gasometer (:gasometer)

SubClassOf(:gasometer :storageTank)
SubClassOf(:gasometer ObjectSomeValuesFrom(:isDesignedToHold ObjectIntersectionOf(:combustableMaterial :gaseousMaterial)))

# Class: :gate (:gate)

AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#altLabel> :gate "sliding gate")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#altLabel> :gate "sluice gate")
SubClassOf(:gate :NavTree_003)
SubClassOf(:gate :discreteAsset)
SubClassOf(:gate :flowOrPressureControlAsset)

# Class: :gauge (:gauge)

SubClassOf(:gauge :discreteAsset)
SubClassOf(:gauge :informationIOutputDevice)

# Class: :generator (:generator)

SubClassOf(:generator :NavTree_005)
SubClassOf(:generator :discreteAsset)

# Class: :genericReactor (#. reactor, generic)

AnnotationAssertion(rdfs:label :genericReactor "#. reactor, generic")
SubClassOf(:genericReactor :NavTree_019)
SubClassOf(:genericReactor :materialProcessingAsset)
SubClassOf(:genericReactor :reactor)

# Class: :golfCart (:golfCart)

SubClassOf(:golfCart :NavTree_011)
SubClassOf(:golfCart :discreteAsset)

# Class: :governmentRegulation (government regulation)

AnnotationAssertion(rdfs:label :governmentRegulation "government regulation"@en)
SubClassOf(:governmentRegulation :contentSubject)

# Class: :granularMaterial (:granularMaterial)

SubClassOf(:granularMaterial :material)

# Class: :grinder (:grinder)

SubClassOf(:grinder :discreteAsset)
SubClassOf(:grinder :materialProcessingAsset)

# Class: :grinderOrComminutor (:grinderOrComminutor)

SubClassOf(:grinderOrComminutor :NavTree_028)
SubClassOf(:grinderOrComminutor :discreteAsset)

# Class: :guideline (:guideline)

SubClassOf(:guideline :informationContentEntity)

# Class: :havingAPart (having a part)

AnnotationAssertion(rdfs:label :havingAPart "having a part"@en)
SubClassOf(:havingAPart :relationalState)

# Class: :hazard (Hazard)

AnnotationAssertion(rdfs:label :hazard "Hazard")

# Class: :hazardousGasMonitoringDevice (#. hazardous gas monitoring device)

AnnotationAssertion(rdfs:label :hazardousGasMonitoringDevice "#. hazardous gas monitoring device")
SubClassOf(:hazardousGasMonitoringDevice :NavTree_004)

# Class: :healthAndSafetyHazard (health and safety hazard)

AnnotationAssertion(rdfs:label :healthAndSafetyHazard "health and safety hazard")
SubClassOf(:healthAndSafetyHazard :hazard)

# Class: :heatExchanger (:heatExchanger)

SubClassOf(:heatExchanger :discreteAsset)
SubClassOf(:heatExchanger :heatingOrCoolingAsset)

# Class: :heatPumpUnit (:heatPumpUnit)

SubClassOf(:heatPumpUnit :NavTree_006)
SubClassOf(:heatPumpUnit :discreteAsset)

# Class: :heater (:heater)

SubClassOf(:heater :discreteAsset)
SubClassOf(:heater :heatingOrCoolingAsset)

# Class: :heatingBoiler (heating boiler)

AnnotationAssertion(:classTree-inclusion :heatingBoiler "false"^^xsd:boolean)
AnnotationAssertion(rdfs:isDefinedBy :heatingBoiler "O.Reg 220: “low pressure boiler” means,
(a) a boiler that is intended to generate steam or other vapour at a pressure of 15 psi (103 kPa) or less, or
(b) a boiler that is intended to be operated at a pressure of 160 psi (1,100 kPa) or less where the water temperature at any boiler outlet is 250°F (121°C) or less; (“chaudière à basse pression”)")
AnnotationAssertion(rdfs:label :heatingBoiler "heating boiler")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#altLabel> :heatingBoiler "low-pressure boiler")
SubClassOf(:heatingBoiler :boiler)

# Class: :heatingOrCoolingAsset (03. heating or cooling)

AnnotationAssertion(rdfs:label :heatingOrCoolingAsset "03. heating or cooling")
SubClassOf(:heatingOrCoolingAsset :NavTree_017)

# Class: :heavyMetalAnalyzer (:heavyMetalAnalyzer)

SubClassOf(:heavyMetalAnalyzer :dissolvedChemicalAnalyzer)

# Class: :hierarchicalSystem (hierarchical system)

AnnotationAssertion(rdfs:label :hierarchicalSystem "hierarchical system")
SubClassOf(:hierarchicalSystem :Regionalized_System)

# Class: :highVoltageStick (:highVoltageStick)

SubClassOf(:highVoltageStick :discreteAsset)
SubClassOf(:highVoltageStick :electricalSafety)

# Class: :highVoltageTester (:highVoltageTester)

SubClassOf(:highVoltageTester :discreteAsset)
SubClassOf(:highVoltageTester :electricalSafety)

# Class: :hoist (:hoist)

AnnotationAssertion(:notionMappingID :hoist "704b49f311e4431a8f4cf701e42fe024")
AnnotationAssertion(rdfs:isDefinedBy :hoist "CSA B167-16(R2021): a machinery unit that is used for vertical lifting or lowering a freely suspended (unguided) load.")
SubClassOf(:hoist :discreteAsset)
SubClassOf(:hoist :liftingOrTransport)

# Class: :holdingCapacity (containment)

AnnotationAssertion(rdfs:label :holdingCapacity "containment")
SubClassOf(:holdingCapacity :functionalCapability)

# Class: :hopper (:hopper)

SubClassOf(:hopper :discreteAsset)
SubClassOf(:hopper :materialAdditionOrFeedingAsset)

# Class: :horizontalLifeline (:horizontalLifeline)

AnnotationAssertion(:notionMappingID :horizontalLifeline "7b621b38a6f54aff9c0afc513b442438")
SubClassOf(:horizontalLifeline :discreteAsset)
SubClassOf(:horizontalLifeline :fallProtectionEquipment)

# Class: :hotWorkEquipment (:hotWorkEquipment)

AnnotationAssertion(:notionMappingID :hotWorkEquipment "5f674b2aae0e4f43b19d6e669ce82610")
AnnotationAssertion(rdfs:isDefinedBy :hotWorkEquipment "Modified from the description of hot work in Ontario Fire Code O.Reg 213/07: equipment involved in work that uses open flames or produce heat or sparks, including cutting, welding, soldering, brazing, grinding, adhesive bonding, thermal spraying and thawing pipes.")
SubClassOf(:hotWorkEquipment :discreteAsset)

# Class: :hydrant (hydrant)

AnnotationAssertion(rdfs:label :hydrant "hydrant"@en)
SubClassOf(:hydrant :NavTree_002)
SubClassOf(:hydrant :discreteAsset)

# Class: :hydrantSystem (:hydrantSystem)

SubClassOf(:hydrantSystem :NavTree_002)

# Class: :incinerator (:incinerator)

SubClassOf(:incinerator :NavTree_024)
SubClassOf(:incinerator :materialProcessingAsset)

# Class: :infiltrationTrench (:infiltrationTrench)

SubClassOf(:infiltrationTrench :NavTree_002)
SubClassOf(:infiltrationTrench :NavTree_013)
SubClassOf(:infiltrationTrench :discreteAsset)

# Class: :informationContentEntity (Information Content Entity)

AnnotationAssertion(rdfs:isDefinedBy :informationContentEntity "an non-phyislcal entity that is about something")
AnnotationAssertion(rdfs:label :informationContentEntity "Information Content Entity"@en)

# Class: :informationIOutputDevice (23. information output device)

AnnotationAssertion(rdfs:label :informationIOutputDevice "23. information output device")
SubClassOf(:informationIOutputDevice :NavTree_017)

# Class: :informationProcessingOrAnalysis (22. information processing or analysis)

AnnotationAssertion(rdfs:label :informationProcessingOrAnalysis "22. information processing or analysis")
SubClassOf(:informationProcessingOrAnalysis :NavTree_017)

# Class: :informationRecordingOrStorage (24. information recording or storage)

AnnotationAssertion(rdfs:label :informationRecordingOrStorage "24. information recording or storage")
SubClassOf(:informationRecordingOrStorage :NavTree_017)

# Class: :informativeResource (:informativeResource)

SubClassOf(:informativeResource :informationContentEntity)

# Class: :infraredCamera (:infraredCamera)

AnnotationAssertion(rdfs:comment :infraredCamera "Mar'24 TH: the parent class of camera was removed because there is no imaginable use for it in queries or other contexts.")
SubClassOf(:infraredCamera :discreteAsset)
SubClassOf(:infraredCamera :singleParameterInstrumentation)

# Class: :instrumentAirOrPneumaticControlPanel (:instrumentAirOrPneumaticControlPanel)

SubClassOf(:instrumentAirOrPneumaticControlPanel :processControlPanelAssets)

# Class: :instrumentation (:instrumentation)

SubClassOf(:instrumentation :discreteAsset)

# Class: :integratedUnitOfStandalones (Integrated Collection of Standalone Assets)

AnnotationAssertion(rdfs:comment :integratedUnitOfStandalones "Mar25,24: It is important to define the concept of a IUSA because they may extend across lines and trains and represent a special case in the asset hierarchy specification. Also, unlike other discrete assets, we need to fully catalog their parts, because they are easily replaceable. Finally, many common equipment, such as pump and motor sets, are IUSAs equipment.")
AnnotationAssertion(rdfs:isDefinedBy :integratedUnitOfStandalones "A discrete asset that consists a collection of discrete asset parts, many of them often appear in other contexts as stand-alone discrete assets (not part of another discrete asset).  The set of parts are physical integrated onto a structure skid, frame, panel, etc, such that the part can be moved or sold together.")
AnnotationAssertion(rdfs:label :integratedUnitOfStandalones "Integrated Collection of Standalone Assets")
SubClassOf(:integratedUnitOfStandalones :NavTree_015)
SubClassOf(:integratedUnitOfStandalones :discreteAssetSystem)

# Class: :interceptor (:interceptor)

SubClassOf(:interceptor :NavTree_002)

# Class: :intercomUnit (:intercomUnit)

SubClassOf(:intercomUnit :discreteAsset)
SubClassOf(:intercomUnit :informationIOutputDevice)

# Class: :interpretation (:interpretation)

AnnotationAssertion(rdfs:comment :interpretation "Jan2024 TH: consider moving to FAMO")
SubClassOf(:interpretation :atomicLevelWork)

# Class: :investigativeWork (investigative work)

AnnotationAssertion(rdfs:label :investigativeWork "investigative work")
SubClassOf(:investigativeWork :workOrderLevelWork)

# Class: :jointer (:jointer)

SubClassOf(:jointer :machineShopTool)

# Class: :kerosene (:kerosene)

SubClassOf(:kerosene :fuelOil)
SubClassOf(:kerosene :liquid)

# Class: :laboratory (:laboratory)

SubClassOf(:laboratory :facility)

# Class: :laboratoryTool (:laboratoryTool)

SubClassOf(:laboratoryTool :NavTree_014)

# Class: :ladder (:ladder)

AnnotationAssertion(:notionMappingID :ladder "4f7f8bace8744d0f88601eed4b91b777")
SubClassOf(:ladder :discreteAsset)

# Class: :landfillGas (:landfillGas)

SubClassOf(:landfillGas :gaseousMaterial)

# Class: :lathe (:lathe)

SubClassOf(:lathe :machineShopTool)

# Class: :legislation (legislation)

AnnotationAssertion(rdfs:label :legislation "legislation"@en)
SubClassOf(:legislation :contentSubject)

# Class: :length (length)

AnnotationAssertion(rdfs:label :length "length"@en)
SubClassOf(:length :dimension)

# Class: :levelInstrumentation (:levelInstrumentation)

SubClassOf(:levelInstrumentation :discreteAsset)
SubClassOf(:levelInstrumentation :singleParameterInstrumentation)

# Class: :levelSwitch (:levelSwitch)

SubClassOf(:levelSwitch :NavTree_018)

# Class: :levelTransmitter (:levelTransmitter)

SubClassOf(:levelTransmitter :NavTree_018)

# Class: :lifeJacket (:lifeJacket)

SubClassOf(:lifeJacket :discreteAsset)
SubClassOf(:lifeJacket :floatationEquipment)

# Class: :lifeRing (:lifeRing)

SubClassOf(:lifeRing :discreteAsset)
SubClassOf(:lifeRing :personnalFloatationDevice)

# Class: :liftingOrTransport (09. lifting or transport)

AnnotationAssertion(rdfs:label :liftingOrTransport "09. lifting or transport")
SubClassOf(:liftingOrTransport :NavTree_017)

# Class: :lightingPanel (:lightingPanel)

SubClassOf(:lightingPanel :NavTree_005)
SubClassOf(:lightingPanel :discreteAsset)

# Class: :lightingUnit (:lightingUnit)

SubClassOf(:lightingUnit :NavTree_007)
SubClassOf(:lightingUnit :discreteAsset)

# Class: :lineStructure (Line Structure)

AnnotationAssertion(rdfs:isDefinedBy :lineStructure "A asset that contains at least one piece of line segment asset carries a stream of material substance, energy, or information from one point to another.")
AnnotationAssertion(rdfs:label :lineStructure "Line Structure")
SubClassOf(:lineStructure :flowIntegratedSystem)
SubClassOf(:lineStructure :pathOfConveyance)

# Class: :liquid (:liquid)

SubClassOf(:liquid :material)

# Class: :loadBreakSwitch (:loadBreakSwitch)

SubClassOf(:loadBreakSwitch :disconnectSwitch)

# Class: :loadingDock (:loadingDock)

SubClassOf(:loadingDock :discreteAsset)
SubClassOf(:loadingDock :partOfBuildingOrStructure)

# Class: :machineShopTool (:machineShopTool)

SubClassOf(:machineShopTool :NavTree_014)
SubClassOf(:machineShopTool :discreteAsset)

# Class: :mainPathLine (:mainPathLine)

AnnotationAssertion(rdfs:isDefinedBy :mainPathLine "A line that has one or more junction along its length, linking it to minor branches, but only has one main path that carries a bulk flow from one point to another.")
SubClassOf(:mainPathLine :lineStructure)

# Class: :manhole (:manhole)

SubClassOf(:manhole :NavTree_002)
SubClassOf(:manhole :discreteAsset)

# Class: :manlift (:manlift)

SubClassOf(:manlift :mobileLift)

# Class: :manufacturedOilGreaseSeparator (:manufacturedOilGreaseSeparator)

SubClassOf(:manufacturedOilGreaseSeparator :manufacturedTreatmentDevice)
SubClassOf(:manufacturedOilGreaseSeparator :oilGreaseSeperator)

# Class: :manufacturedTreatmentDevice (:manufacturedTreatmentDevice)

SubClassOf(:manufacturedTreatmentDevice :NavTree_002)
SubClassOf(:manufacturedTreatmentDevice :discreteAsset)

# Class: :mass (mass)

AnnotationAssertion(rdfs:label :mass "mass"@en)
SubClassOf(:mass :quality)

# Class: :material (Material)

AnnotationAssertion(rdfs:label :material "Material")
AnnotationAssertion(rdfs:label :material "Material"@en)

# Class: :materialAdditionOrFeedingAsset (06. material addition or feeding)

AnnotationAssertion(rdfs:label :materialAdditionOrFeedingAsset "06. material addition or feeding")
SubClassOf(:materialAdditionOrFeedingAsset :NavTree_017)

# Class: :materialDistributionPanelAssets (:materialDistributionPanelAssets)

SubClassOf(:materialDistributionPanelAssets :NavTree_010)
SubClassOf(:materialDistributionPanelAssets :NavTree_016)
SubClassOf(:materialDistributionPanelAssets :discreteAsset)

# Class: :materialProcessingAsset (05. material processing)

AnnotationAssertion(rdfs:label :materialProcessingAsset "05. material processing")
SubClassOf(:materialProcessingAsset :NavTree_017)

# Class: :maxInputVoltage (:maxInputVoltage)

SubClassOf(:maxInputVoltage :capability)

# Class: :measureOfCurrentFlow (current output)

AnnotationAssertion(rdfs:label :measureOfCurrentFlow "current output"@en)
SubClassOf(:measureOfCurrentFlow :measureOfQuantity)

# Class: :measureOfMassFlow (material output)

AnnotationAssertion(rdfs:label :measureOfMassFlow "material output"@en)
SubClassOf(:measureOfMassFlow :measureOfQuantity)

# Class: :measureOfPowerLevel (:measureOfPowerLevel)

SubClassOf(:measureOfPowerLevel :measureOfQuantity)

# Class: :measureOfPressure (pressure measurement)

AnnotationAssertion(rdfs:label :measureOfPressure "pressure measurement")
SubClassOf(:measureOfPressure :measureOfQuantity)

# Class: :measureOfQuantity (measurement)

AnnotationAssertion(rdfs:comment :measureOfQuantity "Feb'24: considered for DEPRECATION, after we have the more specialized properties of hasMeasurementValue")
AnnotationAssertion(rdfs:comment :measureOfQuantity "TH Dec/2023: a level of function that is realized at a certain type t")
AnnotationAssertion(rdfs:label :measureOfQuantity "measurement"@en)
SubClassOf(:measureOfQuantity :informationContentEntity)

# Class: :measureOfSpeed (speed)

AnnotationAssertion(rdfs:label :measureOfSpeed "speed"@en)
SubClassOf(:measureOfSpeed :measureOfQuantity)

# Class: :measureOfVoltageLevel (output voltage)

AnnotationAssertion(rdfs:label :measureOfVoltageLevel "output voltage"@en)
SubClassOf(:measureOfVoltageLevel :measureOfQuantity)

# Class: :measureOfWeight (lifting capacity)

AnnotationAssertion(rdfs:label :measureOfWeight "lifting capacity"@en)
SubClassOf(:measureOfWeight :measureOfQuantity)

# Class: :mechanicalEnergyOrMotion (08. mechanical energy or motion)

AnnotationAssertion(rdfs:label :mechanicalEnergyOrMotion "08. mechanical energy or motion")
SubClassOf(:mechanicalEnergyOrMotion :NavTree_017)

# Class: :mechanicalFitting (:mechanicalFitting)

SubClassOf(:mechanicalFitting :NavTree_009)
SubClassOf(:mechanicalFitting :discreteAsset)

# Class: :membraneBioreactor (:membraneBioreactor)

SubClassOf(:membraneBioreactor :bioreactor)

# Class: :millingMachine (:millingMachine)

SubClassOf(:millingMachine :machineShopTool)

# Class: :minInputVoltage (:minInputVoltage)

SubClassOf(:minInputVoltage :capability)

# Class: :mixerOrAgitator (:mixerOrAgitator)

AnnotationAssertion(:AvClassEquivalent :mixerOrAgitator "Agitator")
SubClassOf(:mixerOrAgitator :discreteAsset)
SubClassOf(:mixerOrAgitator :materialProcessingAsset)
SubClassOf(:mixerOrAgitator :reactorComponent)

# Class: :mobileLift (:mobileLift)

SubClassOf(:mobileLift :discreteAsset)
SubClassOf(:mobileLift :liftingOrTransport)

# Class: :modularDiscreteAssembly (DEPRECATED modular discrete assembly)

AnnotationAssertion(rdfs:comment :modularDiscreteAssembly "This concept is no longer useful after we have a broader notion of system that also covers discrete asset. A modular discrete assembly would simply be a skid-mounted system")
AnnotationAssertion(rdfs:label :modularDiscreteAssembly "DEPRECATED modular discrete assembly")
AnnotationAssertion(owl:deprecated :modularDiscreteAssembly "true"^^xsd:boolean)

# Class: :motionSensor (:motionSensor)

SubClassOf(:motionSensor :discreteAsset)
SubClassOf(:motionSensor :securityOrAccessControlAsset)

# Class: :motor (motor)

AnnotationAssertion(rdfs:label :motor "motor"@en)
SubClassOf(:motor :NavTree_001)
SubClassOf(:motor :NavTree_009)
SubClassOf(:motor :discreteAsset)

# Class: :motorDriveOr_VFD (:motorDriveOr_VFD)

SubClassOf(:motorDriveOr_VFD :NavTree_005)
SubClassOf(:motorDriveOr_VFD :discreteAsset)

# Class: :motorStarter (:motorStarter)

SubClassOf(:motorStarter :NavTree_005)
SubClassOf(:motorStarter :discreteAsset)

# Class: :multiParametertrumentation (:multiParametertrumentation)

SubClassOf(:multiParametertrumentation :instrumentation)
SubClassOf(:multiParametertrumentation :sensingAsset)
SubClassOf(:multiParametertrumentation ObjectSomeValuesFrom(:hasPhysicalPart :singleParameterInstrumentation))

# Class: :naturalGas (:naturalGas)

SubClassOf(:naturalGas :fuel)
SubClassOf(:naturalGas :gaseousMaterial)

# Class: :networkPanelAssets (:networkPanelAssets)

SubClassOf(:networkPanelAssets :NavTree_016)
SubClassOf(:networkPanelAssets :discreteAsset)

# Class: :networkRouter (:networkRouter)

SubClassOf(:networkRouter :NavTree_012)
SubClassOf(:networkRouter :discreteAsset)

# Class: :networkStorageAppliance (:networkStorageAppliance)

AnnotationAssertion(:classTree-excludeFromBranch :networkStorageAppliance :informationProcessingOrAnalysis)
SubClassOf(:networkStorageAppliance :computer)
SubClassOf(:networkStorageAppliance :serverAppliance)

# Class: :networkSwitch (:networkSwitch)

SubClassOf(:networkSwitch :NavTree_012)
SubClassOf(:networkSwitch :discreteAsset)

# Class: :nitrateOrNitriteAnalyzer (:nitrateOrNitriteAnalyzer)

SubClassOf(:nitrateOrNitriteAnalyzer :dissolvedChemicalAnalyzer)

# Class: :nominalInputVoltage (:nominalInputVoltage)

SubClassOf(:nominalInputVoltage :capability)

# Class: :non-standaloneComponent (Non-Standalone Component)

AnnotationAssertion(rdfs:comment :non-standaloneComponent "Mar26,24: there is currently no use-case for this concept")
AnnotationAssertion(rdfs:isDefinedBy :non-standaloneComponent "A discrete asset, when in use, is always a phyiscal part of a larger discrete asset.")
AnnotationAssertion(rdfs:label :non-standaloneComponent "Non-Standalone Component")
SubClassOf(:non-standaloneComponent :asset)
SubClassOf(:non-standaloneComponent :discreteAsset)

# Class: :noteTaking (:noteTaking)

SubClassOf(:noteTaking :process)

# Class: :observation (:observation)

AnnotationAssertion(rdfs:comment :observation "Feb'24 TH: intent on turning this term into a defined term")
SubClassOf(:observation :description)

# Class: :occupyingThe (occupying)

AnnotationAssertion(rdfs:comment :occupyingThe "TH: range should be a role, domain should be an asset")
AnnotationAssertion(rdfs:label :occupyingThe "occupying"@en)
SubClassOf(:occupyingThe :relationalState)

# Class: :oilGreaseSeperator (oil grit separator)

AnnotationAssertion(rdfs:label :oilGreaseSeperator "oil grit separator")
SubClassOf(:oilGreaseSeperator :discreteAsset)

# Class: :ontarioRegulation (Ontario provincial regulation)

AnnotationAssertion(rdfs:label :ontarioRegulation "Ontario provincial regulation"@en)
SubClassOf(:ontarioRegulation :governmentRegulation)

# Class: :opperationState (operational state)

AnnotationAssertion(rdfs:label :opperationState "operational state"@en)
SubClassOf(:opperationState :definedState)

# Class: :organization (Organization)

AnnotationAssertion(rdfs:label :organization "Organization")

# Class: :outfallOrDischargePoint (:outfallOrDischargePoint)

SubClassOf(:outfallOrDischargePoint :NavTree_002)
SubClassOf(:outfallOrDischargePoint :discreteAsset)

# Class: :ozoneGenerator (:ozoneGenerator)

SubClassOf(:ozoneGenerator :chemicalDosingSystemOrComponentAsset)
SubClassOf(:ozoneGenerator :discreteAsset)

# Class: :pH_analyzer (:pH_analyzer)

SubClassOf(:pH_analyzer :discreteAsset)
SubClassOf(:pH_analyzer :waterQualityInstrumentation)

# Class: :packaged_AC_Unit (:packaged_AC_Unit)

SubClassOf(:packaged_AC_Unit :airCondition)
SubClassOf(:packaged_AC_Unit :discreteAsset)

# Class: :paragraphContent (paragraph content)

AnnotationAssertion(rdfs:label :paragraphContent "paragraph content"@en)
SubClassOf(:paragraphContent :pieceOfContent)

# Class: :partOfBuildingOrStructure (#. part of building or structure)

AnnotationAssertion(rdfs:comment :partOfBuildingOrStructure "Examples include interior walls, doors, windows, roofing, eaves troughs, and the City logo sign.")
AnnotationAssertion(rdfs:isDefinedBy :partOfBuildingOrStructure "Any part of a built structure that
* bears physical integrity for it to bear load and stress or
* is any part permanently connected to one of the parts above while not being a part of a facility spatial support system.")
AnnotationAssertion(rdfs:label :partOfBuildingOrStructure "#. part of building or structure")
SubClassOf(:partOfBuildingOrStructure :NavTree_008)

# Class: :passengerVehicles (:passengerVehicles)

SubClassOf(:passengerVehicles :NavTree_011)
SubClassOf(:passengerVehicles :discreteAsset)

# Class: :pathOfConveyance (02. path of flow)

AnnotationAssertion(rdfs:label :pathOfConveyance "02. path of flow")
SubClassOf(:pathOfConveyance :NavTree_017)

# Class: :pelletizer (:pelletizer)

AnnotationAssertion(:dev-PropertyNote :pelletizer "DiscreteModular? System?")
SubClassOf(:pelletizer :NavTree_024)
SubClassOf(:pelletizer :discreteAsset)

# Class: :personalGasMeter (:personalGasMeter)

AnnotationAssertion(:classTree-excludeFromBranch :personalGasMeter :genericCrossDomainAsset)
SubClassOf(:personalGasMeter :discreteAsset)
SubClassOf(:personalGasMeter :gaseousChemicalAndAirQualityInstrumentation)
SubClassOf(:personalGasMeter :hazardousGasMonitoringDevice)

# Class: :personnalFloatationDevice (:personnalFloatationDevice)

AnnotationAssertion(rdfs:comment :personnalFloatationDevice "A life jacket is not a subclass of Personal Flotation Device (PFD) in the technical sense. In regulatory and safety standards, life jackets and PFDs are distinct categories of flotation devices, each with its own specifications, intended uses, and buoyancy requirements. While both life jackets and PFDs serve the purpose of keeping individuals afloat in water, they differ in their design, buoyancy levels, and intended applications. Life jackets typically provide higher levels of buoyancy and are designed to turn an unconscious wearer face-up in the water, while PFDs are more varied in design and may not always have the same level of buoyancy or the ability to turn a wearer face-up.")
SubClassOf(:personnalFloatationDevice :discreteAsset)
SubClassOf(:personnalFloatationDevice :floatationEquipment)

# Class: :phosphateAnalyzer (:phosphateAnalyzer)

SubClassOf(:phosphateAnalyzer :dissolvedChemicalAnalyzer)

# Class: :pickupTruck (:pickupTruck)

SubClassOf(:pickupTruck :NavTree_011)
SubClassOf(:pickupTruck :discreteAsset)

# Class: :pieceOfContent (pieceOfContent)

AnnotationAssertion(rdfs:comment :pieceOfContent "TH 12/5/2023: created to represent a piece of content about some part of the world, as oppose to other pieces of content used to organize these pieces of content, such as a folder in a computer, a compilation, or section delimiter in a document.")
AnnotationAssertion(rdfs:label :pieceOfContent "pieceOfContent"@en)
SubClassOf(:pieceOfContent :informationContentEntity)

# Class: :pieceOfLawn (:pieceOfLawn)

SubClassOf(:pieceOfLawn :NavTree_013)
SubClassOf(:pieceOfLawn :discreteAsset)

# Class: :pipeFitting (:pipeFitting)

SubClassOf(:pipeFitting :NavTree_002)
SubClassOf(:pipeFitting :NavTree_010)
SubClassOf(:pipeFitting :discreteAsset)

# Class: :pipeManifold (:pipeManifold)

SubClassOf(:pipeManifold :NavTree_010)
SubClassOf(:pipeManifold :discreteAsset)

# Class: :pipeSegment (:pipeSegment)

SubClassOf(:pipeSegment :LinearSegmentAsset)
SubClassOf(:pipeSegment :NavTree_001)
SubClassOf(:pipeSegment :discreteAsset)

# Class: :pipette (:pipette)

SubClassOf(:pipette :discreteAsset)
SubClassOf(:pipette :laboratoryTool)

# Class: :pipingSystem (:pipingSystem)

SubClassOf(:pipingSystem :flowIntegratedSystem)

# Class: :planer (:planer)

SubClassOf(:planer :machineShopTool)

# Class: :plantingSpace (:plantingSpace)

SubClassOf(:plantingSpace :NavTree_013)
SubClassOf(:plantingSpace :discreteAsset)

# Class: :polymerPreparationSystem (:polymerPreparationSystem)

SubClassOf(:polymerPreparationSystem :chemicalDosingSystemOrComponentAsset)

# Class: :pond (:pond)

SubClassOf(:pond :NavTree_002)
SubClassOf(:pond :discreteAsset)

# Class: :portableGasDetector (:portableGasDetector)

SubClassOf(:portableGasDetector :NavTree_014)
SubClassOf(:portableGasDetector :discreteAsset)

# Class: :portableLadder (:portableLadder)

AnnotationAssertion(:notionMappingID :portableLadder "79fddffa402d41d1aee6c4e68bce3341")
SubClassOf(:portableLadder :NavTree_014)
SubClassOf(:portableLadder :ladder)

# Class: :portableScaffolding (:portableScaffolding)

SubClassOf(:portableScaffolding :NavTree_014)
SubClassOf(:portableScaffolding :discreteAsset)

# Class: :portionOfGranularBioreactorMedium (:portionOfGranularBioreactorMedium)

SubClassOf(:portionOfGranularBioreactorMedium :unitOfBioreactorMedium)

# Class: :portionOfGranularFilterMedium (:portionOfGranularFilterMedium)

SubClassOf(:portionOfGranularFilterMedium :discreteAsset)
SubClassOf(:portionOfGranularFilterMedium :unitOfTreatmentFilterMedium)

# Class: :positionInstrumentation (:positionInstrumentation)

SubClassOf(:positionInstrumentation :discreteAsset)
SubClassOf(:positionInstrumentation :singleParameterInstrumentation)

# Class: :powerBoiler (power boiler)

AnnotationAssertion(:classTree-inclusion :powerBoiler "false"^^xsd:boolean)
AnnotationAssertion(rdfs:isDefinedBy :powerBoiler "from TSSA BPV-20-01 R1:
i. steam service operating pressure above 103 kPa (15 psig)
ii. hot water service operating pressure above 1100 kPa (160 psig) or above the temperature 121 C (250 F)")
AnnotationAssertion(rdfs:label :powerBoiler "power boiler")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#altLabel> :powerBoiler "high-pressure boiler")
SubClassOf(:powerBoiler :boiler)

# Class: :powerHarmonicFilter (:powerHarmonicFilter)

SubClassOf(:powerHarmonicFilter :NavTree_005)
SubClassOf(:powerHarmonicFilter :discreteAsset)

# Class: :powerWasher (:powerWasher)

SubClassOf(:powerWasher :NavTree_014)
SubClassOf(:powerWasher :discreteAsset)

# Class: :poweredAirRespirator (:poweredAirRespirator)

SubClassOf(:poweredAirRespirator :discreteAsset)
SubClassOf(:poweredAirRespirator :respiratoryHazardProtection)

# Class: :pressureInstrumentation (:pressureInstrumentation)

SubClassOf(:pressureInstrumentation :discreteAsset)
SubClassOf(:pressureInstrumentation :singleParameterInstrumentation)

# Class: :pressureReliefDevice (:pressureReliefDevice)

AnnotationAssertion(rdfs:isDefinedBy :pressureReliefDevice "Pressure relief device (PRD) — a fitting installed on pressure equipment designed to provide primary protection from overpressurization. PRDs include both reclosing devices (e.g., safety valves, relief valves,safety relief valves) and non-reclosing devices (including rupture discs and fusible plugs). - CSA-B51-19")
SubClassOf(:pressureReliefDevice :pressureReliefOrExplosionPrevention)

# Class: :pressureReliefOrExplosionPrevention (#. explosion prevention equipment)

AnnotationAssertion(rdfs:label :pressureReliefOrExplosionPrevention "#. explosion prevention equipment")
SubClassOf(:pressureReliefOrExplosionPrevention :NavTree_004)

# Class: :pressureReliefValve (:pressureReliefValve)

AnnotationAssertion(:dev-PropertyNote :pressureReliefValve "A pressure relief device designed to actuate on inlet static pressure and to reclose after normal conditions have been restored. It may be one of the following types and have one or more of the following design features.
A. Restricted lift PRV: a pressure relief valve in which the actual discharge area is determined by the position of the disc.
B. Full lift PRV: a pressure relief valve in which the actual discharge area is not determined by the position of the disc.
C. Reduced bore PRV: a pressure relief valve in which the flow path area below the seat is less than the flow area at the inlet to the valve.
D. Full bore PRV: a pressure relief valve in which the bore area is equal to the flow area at the inlet to the valve and there are no protrusions in the bore.
E. Direct spring loaded PRV: a pressure relief valve in which the disc is held closed by a spring.
F. Pilot operated PRV: a pressure relief valve in which a piston or diaphragm is held closed by system pressure and the holding pressure is controlled by a pilot valve actuated by system pressure. 
G. Conventional direct spring loaded PRV: a direct spring loaded pressure relief valve whose operational characteristics are directly affected by changes in the back pressure
H. Balanced direct spring loaded PRV: a direct spring loaded pressure relief valve which incorporates means of minimizing the effect of back pressure on the operational characteristics (opening pressure, closing pressure, and relieving capacity).
I. Internal spring PRV: a direct spring loaded pressure relief valve whose spring and all or part of the operating mechanism is exposed to the system pressure when the valve is in the closed position. 
J. Temperature and pressure relief valve: a pressure relief valve that may be actuated by pressure at the valve inlet or by temperature at the valve inlet.
K. Power actuated PRV: a pressure relief valve actuated by an externally powered control device.")
AnnotationAssertion(rdfs:isDefinedBy :pressureReliefValve "A device designed to prevent pressure or vacuum from exceeding a predetermined value in a pressure vessel. - adapted from ANSI/ASME Performance Test Code PTC-25-2008")
SubClassOf(:pressureReliefValve :discreteAsset)
SubClassOf(:pressureReliefValve :flowOrPressureControlAsset)
SubClassOf(:pressureReliefValve :pressureReliefDevice)
SubClassOf(:pressureReliefValve :valve)

# Class: :pressureSwitch (:pressureSwitch)

SubClassOf(:pressureSwitch :NavTree_018)
SubClassOf(:pressureSwitch :discreteAsset)

# Class: :pressureTransmitter (:pressureTransmitter)

SubClassOf(:pressureTransmitter :NavTree_018)
SubClassOf(:pressureTransmitter :discreteAsset)

# Class: :pressurizedPipingSystem (:pressurizedPipingSystem)

AnnotationAssertion(:notionMappingID :pressurizedPipingSystem "315f3959781f42bd81154d50fa751f1b")
SubClassOf(:pressurizedPipingSystem :pipingSystem)

# Class: :preventiveWork (preventive work)

AnnotationAssertion(rdfs:label :preventiveWork "preventive work")
SubClassOf(:preventiveWork :workOrderLevelWork)

# Class: :process (Process)

AnnotationAssertion(rdfs:label :process "Process")

# Class: :processControlPanelAssets (:processControlPanelAssets)

SubClassOf(:processControlPanelAssets :NavTree_016)
SubClassOf(:processControlPanelAssets :discreteAsset)

# Class: :processPipeSegment (:processPipeSegment)

SubClassOf(:processPipeSegment :NavTree_010)
SubClassOf(:processPipeSegment :pipeSegment)

# Class: :processing (processing)

AnnotationAssertion(rdfs:isDefinedBy :processing "a function that is realized when a physical or chemical property of the thing being processed is changed by the bearer of the function.")
AnnotationAssertion(rdfs:label :processing "processing")
SubClassOf(:processing :functionalCapability)

# Class: :progammableLogicController (:progammableLogicController)

SubClassOf(:progammableLogicController :controller)

# Class: :projectWork (project work)

AnnotationAssertion(rdfs:label :projectWork "project work")
SubClassOf(:projectWork :workOrderLevelWork)

# Class: :propane (:propane)

SubClassOf(:propane :fuel)
SubClassOf(:propane :gaseousMaterial)

# Class: :propertyState (property)

AnnotationAssertion(rdfs:comment :propertyState "Mar 2 '24: only intended to be used for 1) properties associated with a UoM and 2) a property that could change with time. e.g. assetStatus. Where these conditions are not met, use a specific and direct property to the value (e.g., hasServaceableBearing).")
AnnotationAssertion(rdfs:comment :propertyState "Mar 6 '24 Th: renamed to propertyState, which is the same notion as property manifestation, used my Megan in UofT version of FAMO. The intent is to use this as the general description of all properties that change or are quantified by some UoM. If a property is not ascribed to an asset, but exists as a specification for a role or the design of an asset, we must not use the hasProperty relation.  Instead we should use requiresProperty or requiresOccupantProperty.")
AnnotationAssertion(rdfs:label :propertyState "property"@en)

# Class: :protectionRelay (:protectionRelay)

AnnotationAssertion(:classTree-excludeFromBranch :protectionRelay :genericCrossDomainAsset)
SubClassOf(:protectionRelay :NavTree_005)
SubClassOf(:protectionRelay :discreteAsset)
SubClassOf(:protectionRelay :electricalInstrumentation)
SubClassOf(:protectionRelay :electricalSafety)

# Class: :publicAnnoucementSpeaker (:publicAnnoucementSpeaker)

SubClassOf(:publicAnnoucementSpeaker :discreteAsset)
SubClassOf(:publicAnnoucementSpeaker :informationIOutputDevice)

# Class: :publisher (publisher)

AnnotationAssertion(rdfs:label :publisher "publisher"@en)
SubClassOf(:publisher :organization)

# Class: :pulsationDampener (:pulsationDampener)

SubClassOf(:pulsationDampener :NavTree_010)
SubClassOf(:pulsationDampener :discreteAsset)

# Class: :pump (:pump)

SubClassOf(:pump :NavTree_001)
SubClassOf(:pump :conveyanceOfMaterialFlow)
SubClassOf(:pump :discreteAsset)

# Class: :pumpSurgeSuppressionTank (:pumpSurgeSuppressionTank)

SubClassOf(:pumpSurgeSuppressionTank :MaterialStorageOrSurgeSuppressionAsset)
SubClassOf(:pumpSurgeSuppressionTank :discreteAsset)

# Class: :pumpWetWell (:pumpWetWell)

SubClassOf(:pumpWetWell :NavTree_002)
SubClassOf(:pumpWetWell :discreteAsset)

# Class: :pumpingStation (:pumpingStation)

SubClassOf(:pumpingStation :facility)

# Class: :quality (quality)

AnnotationAssertion(rdfs:comment :quality "TH Mar 24: property that is not related to what the asset can do. For example, its colour.")
AnnotationAssertion(rdfs:label :quality "quality"@en)
SubClassOf(:quality :propertyState)

# Class: :quencher (:quencher)

SubClassOf(:quencher :NavTree_010)
SubClassOf(:quencher :discreteAsset)

# Class: :radialArmDrill (:radialArmDrill)

SubClassOf(:radialArmDrill :machineShopTool)

# Class: :ratedPowerOutput (:ratedPowerOutput)

SubClassOf(:ratedPowerOutput :functionalCapability)

# Class: :reactor (:reactor)

AnnotationAssertion(rdfs:comment :reactor "March23'24: did not use \"tank\" in the naming because, there are reactors that do not take the form of a tank")
SubClassOf(:reactor :discreteAsset)

# Class: :reactorComponent (#. reactor component)

AnnotationAssertion(rdfs:label :reactorComponent "#. reactor component")
SubClassOf(:reactorComponent :NavTree_019)

# Class: :relationalState (relational property)

AnnotationAssertion(rdfs:label :relationalState "relational property"@en)
SubClassOf(:relationalState :propertyState)

# Class: :reliefValve (:reliefValve)

AnnotationAssertion(rdfs:isDefinedBy :reliefValve "A pressure relief valve characterized by gradual opening or closing generally proportional to the increase or decrease in pressure. It is normally used for incompressible fluids.- ANSI/ASME Performance Test Code PTC-25-2008")
SubClassOf(:reliefValve :pressureReliefValve)

# Class: :remoteTerminalUnit (:remoteTerminalUnit)

SubClassOf(:remoteTerminalUnit :controller)

# Class: :replaceableFilterCartridge (:replaceableFilterCartridge)

SubClassOf(:replaceableFilterCartridge :NavTree_009)
SubClassOf(:replaceableFilterCartridge :discreteAsset)

# Class: :requirement (:requirement)

AnnotationAssertion(rdfs:comment :requirement "Feb'24 TH: intent on turning this term into a defined term
Jan'24 TH: this term is to be develope further, likely as a defined term.")
AnnotationAssertion(rdfs:isDefinedBy :requirement "a specification enforced by an organization of person that has legitimate authority over an aspect of the asset owner organization.")
SubClassOf(:requirement :description)

# Class: :reservoir (:reservoir)

SubClassOf(:reservoir :drinkingWaterStorage)

# Class: :residualChlorineInstrumentation (:residualChlorineInstrumentation)

SubClassOf(:residualChlorineInstrumentation :discreteAsset)
SubClassOf(:residualChlorineInstrumentation :waterQualityInstrumentation)

# Class: :respiratorMask (:respiratorMask)

SubClassOf(:respiratorMask :discreteAsset)
SubClassOf(:respiratorMask :respiratoryHazardProtection)

# Class: :respiratoryHazardProtection (#. respiratory hazard protection)

AnnotationAssertion(rdfs:label :respiratoryHazardProtection "#. respiratory hazard protection")
SubClassOf(:respiratoryHazardProtection :NavTree_004)

# Class: :revision (revision)

AnnotationAssertion(rdfs:label :revision "revision"@en)

# Class: :roadSegement (:roadSegement)

SubClassOf(:roadSegement :NavTree_007)
SubClassOf(:roadSegement :discreteAsset)

# Class: :roleOfAPerson (role of a person)

AnnotationAssertion(rdfs:label :roleOfAPerson "role of a person")
SubClassOf(:roleOfAPerson :role)

# Class: :rollUpDoor (:rollUpDoor)

SubClassOf(:rollUpDoor :discreteAsset)
SubClassOf(:rollUpDoor :partOfBuildingOrStructure)

# Class: :roof (:roof)

SubClassOf(:roof :discreteAsset)
SubClassOf(:roof :partOfBuildingOrStructure)

# Class: :ropeOrCableGrab (:ropeOrCableGrab)

SubClassOf(:ropeOrCableGrab :fallProtectionEquipment)

# Class: :rotaryDrumThickener (:rotaryDrumThickener)

SubClassOf(:rotaryDrumThickener :thickener)

# Class: :rotatingCollector (:rotatingCollector)

SubClassOf(:rotatingCollector :collectorMecahanism)

# Class: :rotationalSpeed (rotational speed)

AnnotationAssertion(rdfs:label :rotationalSpeed "rotational speed"@en)
SubClassOf(:rotationalSpeed :measureOfSpeed)

# Class: :rubberInsulatingGloves (:rubberInsulatingGloves)

SubClassOf(:rubberInsulatingGloves :discreteAsset)
SubClassOf(:rubberInsulatingGloves :electricalSafety)

# Class: :rubberInsulatingSleeves (:rubberInsulatingSleeves)

SubClassOf(:rubberInsulatingSleeves :discreteAsset)
SubClassOf(:rubberInsulatingSleeves :electricalSafety)

# Class: :ruptureDisc (:ruptureDisc)

SubClassOf(:ruptureDisc :discreteAsset)
SubClassOf(:ruptureDisc :pressureReliefDevice)

# Class: :safetyReliefValve (:safetyReliefValve)

AnnotationAssertion(rdfs:isDefinedBy :safetyReliefValve "A pressure relief valve characterized by rapid opening or closing or by gradual opening or closing, generally proportional to the increase or decrease in pressure.")
SubClassOf(:safetyReliefValve :pressureReliefValve)

# Class: :safetyValve (:safetyValve)

AnnotationAssertion(rdfs:isDefinedBy :safetyValve "A pressure relief valve characterized by full-opening pop action and recloses when the pressure drops to a value consistent with the blowdown requirements prescribed by the applicable governing code or standard.")
SubClassOf(:safetyValve :pressureReliefValve)

# Class: :samplingPoint (:samplingPoint)

SubClassOf(:samplingPoint :NavTree_010)
SubClassOf(:samplingPoint :discreteAsset)

# Class: :scaffolding (:scaffolding)

AnnotationAssertion(:notionMappingID :scaffolding "4961170b77b24110a3655ba7386b04c4")
SubClassOf(:scaffolding :functionalAssemblyOfComponents)

# Class: :scissorsLift (:scissorsLift)

SubClassOf(:scissorsLift :manlift)

# Class: :screwClassifier (:screwClassifier)

SubClassOf(:screwClassifier :classifier)

# Class: :screwConveyor (:screwConveyor)

AnnotationAssertion(:dev-PropertyNote :screwConveyor "shaftless(boolean) - from Avantis category")
SubClassOf(:screwConveyor :NavTree_003)
SubClassOf(:screwConveyor :conveyor)

# Class: :screwPress (:screwPress)

SubClassOf(:screwPress :dewateringPress)

# Class: :sealOrGasket (:sealOrGasket)

SubClassOf(:sealOrGasket :NavTree_009)
SubClassOf(:sealOrGasket :discreteAsset)

# Class: :sectionContent (section content)

AnnotationAssertion(rdfs:label :sectionContent "section content"@en)
SubClassOf(:sectionContent :pieceOfContent)

# Class: :securityCamera (:securityCamera)

AnnotationAssertion(rdfs:comment :securityCamera "Mar'24 TH: the parent class of camera was removed because there is no imaginable use for it in queries or other contexts.")
SubClassOf(:securityCamera :securityOrAccessControlAsset)

# Class: :securityOrAccessControlAsset (Security or Access Control Asset)

AnnotationAssertion(rdfs:label :securityOrAccessControlAsset "Security or Access Control Asset")
SubClassOf(:securityOrAccessControlAsset :NavTree_007)

# Class: :sedimentationTank (:sedimentationTank)

SubClassOf(:sedimentationTank :NavTree_023)
SubClassOf(:sedimentationTank :discreteAsset)
SubClassOf(:sedimentationTank ObjectSomeValuesFrom(:hasPhysicalPart :structuralTank))

# Class: :selfContainedBreathingApparatus (:selfContainedBreathingApparatus)

SubClassOf(:selfContainedBreathingApparatus :discreteAsset)
SubClassOf(:selfContainedBreathingApparatus :respiratoryHazardProtection)

# Class: :selfRetractingLifeline (:selfRetractingLifeline)

AnnotationAssertion(:notionMappingID :selfRetractingLifeline "c319721ea78042788fb746723e66e038")
AnnotationAssertion(rdfs:isDefinedBy :selfRetractingLifeline "CSA Z259.2.2-17: a component that automatically adjusts its length under light tension, and automatically applies to arrest force in the event of a fall.")
SubClassOf(:selfRetractingLifeline :discreteAsset)
SubClassOf(:selfRetractingLifeline :fallProtectionEquipment)

# Class: :semi-solid (:semi-solid)

SubClassOf(:semi-solid :material)

# Class: :sensingAsset (21. sensing (information capture))

AnnotationAssertion(rdfs:label :sensingAsset "21. sensing (information capture)")
SubClassOf(:sensingAsset :NavTree_017)

# Class: :separator (:separator)

SubClassOf(:separator :discreteAsset)
SubClassOf(:separator :materialProcessingAsset)

# Class: :serverAppliance (:serverAppliance)

SubClassOf(:serverAppliance :NavTree_012)
SubClassOf(:serverAppliance :discreteAsset)

# Class: :sewerSegment (:sewerSegment)

AnnotationAssertion(rdfs:comment :sewerSegment "necessaryProperty: pressurized  / gravity")
SubClassOf(:sewerSegment :NavTree_002)
SubClassOf(:sewerSegment :discreteAsset)
SubClassOf(:sewerSegment :pipeSegment)

# Class: :sewerServiceConnection (:sewerServiceConnection)

SubClassOf(:sewerServiceConnection :NavTree_002)

# Class: :simpleLine (:simpleLine)

AnnotationAssertion(rdfs:isDefinedBy :simpleLine "An line that has no junction across its span.")
SubClassOf(:simpleLine :lineStructure)

# Class: :singleParameterInstrumentation (:singleParameterInstrumentation)

SubClassOf(:singleParameterInstrumentation :instrumentation)
SubClassOf(:singleParameterInstrumentation :sensingAsset)

# Class: :sittingWithinThe (sitting within)

AnnotationAssertion(rdfs:label :sittingWithinThe "sitting within"@en)
SubClassOf(:sittingWithinThe :relationalState)

# Class: :sling (:sling)

AnnotationAssertion(:notionMappingID :sling "602f9138b2d84c3b9d0054fb164fe852")
AnnotationAssertion(rdfs:isDefinedBy :sling "OSHA 1910.184: an assembly which connects the load to the material handling equipment.")
SubClassOf(:sling :discreteAsset)
SubClassOf(:sling :fallProtectionEquipment)

# Class: :sludge (:sludge)

SubClassOf(:sludge :material)

# Class: :solenoid (:solenoid)

SubClassOf(:solenoid :NavTree_002)
SubClassOf(:solenoid :discreteAsset)
SubClassOf(:solenoid :flowOrPressureControlAsset)
SubClassOf(:solenoid :valve)

# Class: :solid (:solid)

SubClassOf(:solid :material)

# Class: :space (:space)

AnnotationAssertion(rdfs:comment :space "The subtypes of concern include 
3-dimensional space that is fully or partially enclosed by the surfaces of a set of architectural parts, structural parts, or a parcel of land. 
A 2-dimensional or a depthless 3-dimensional surface space that coincides with a surface formed by a set of architectural parts, structural parts, or a parcel of land.")
AnnotationAssertion(rdfs:isDefinedBy :space "A space enclosed or partially enclosed by a set of physical boundaries or distinctions")

# Class: :specification (:specification)

SubClassOf(:specification :description)

# Class: :speedOfTravel (speed of travel)

AnnotationAssertion(rdfs:label :speedOfTravel "speed of travel"@en)
SubClassOf(:speedOfTravel :measureOfSpeed)

# Class: :spillKit (:spillKit)

SubClassOf(:spillKit :chemicalProtection)
SubClassOf(:spillKit :discreteAsset)

# Class: :stack (:stack)

SubClassOf(:stack :NavTree_008)
SubClassOf(:stack :discreteAsset)

# Class: :steamTrap (:steamTrap)

SubClassOf(:steamTrap :NavTree_010)
SubClassOf(:steamTrap :discreteAsset)

# Class: :stillOrVideoMobileCamera (:stillOrVideoMobileCamera)

AnnotationAssertion(rdfs:comment :stillOrVideoMobileCamera "Mar'24 TH: the parent class of camera was removed because there is no imaginable use for it in queries or other contexts.")
SubClassOf(:stillOrVideoMobileCamera :NavTree_014)

# Class: :storageTank (:storageTank)

SubClassOf(:storageTank :MaterialStorageOrSurgeSuppressionAsset)
SubClassOf(:storageTank :tankOrVessel)

# Class: :stormServiceConnection (:stormServiceConnection)

SubClassOf(:stormServiceConnection :NavTree_002)

# Class: :strainer (:strainer)

AnnotationAssertion(:dev-PropertyNote :strainer "motorized (boolean) - from P&ID drawing")
SubClassOf(:strainer :NavTree_010)
SubClassOf(:strainer :discreteAsset)

# Class: :structuralTank (:structuralTank)

SubClassOf(:structuralTank :NavTree_008)
SubClassOf(:structuralTank :tankOrVessel)

# Class: :structuralTankComponent (:structuralTankComponent)

SubClassOf(:structuralTankComponent :tankOrVessel)

# Class: :structuralWall (:structuralWall)

SubClassOf(:structuralWall :NavTree_008)
SubClassOf(:structuralWall :discreteAsset)

# Class: :sulphinationSystem (:sulphinationSystem)

SubClassOf(:sulphinationSystem :chemicalDosingSystemOrComponentAsset)

# Class: :suppliedAirRespirator (:suppliedAirRespirator)

SubClassOf(:suppliedAirRespirator :discreteAsset)
SubClassOf(:suppliedAirRespirator :respiratoryHazardProtection)

# Class: :switchgearDistributionBus (:switchgearDistributionBus)

SubClassOf(:switchgearDistributionBus :NavTree_005)
SubClassOf(:switchgearDistributionBus :discreteAsset)

# Class: :switchgearGroundingDevice (:switchgearGroundingDevice)

SubClassOf(:switchgearGroundingDevice :NavTree_005)
SubClassOf(:switchgearGroundingDevice :discreteAsset)
SubClassOf(:switchgearGroundingDevice :electricalSafety)

# Class: :system (System)

AnnotationAssertion(rdfs:comment :system "Further Clarifications:
The asset parts of a system can be interrelated by physical connections, controlled material flows, information flow, or energy transmission between the parts.
Each part of the system should be involved in a higher-order function of the system. While some parts are directly involved in realizing the function others are involved by supporting the regulation, reliability, maintainability, and other implicit goals of the system.
Examples of system include
* wireless radio network
* a building or a bridge
* a stormwater management pond
* any subsystem functional structure")
AnnotationAssertion(rdfs:isDefinedBy :system "A collection of interrelated assets capable of some higher-order function.")
AnnotationAssertion(rdfs:label :system "System")
SubClassOf(:system :collectionOfAssets)

# Class: :systemOfDiscreteAssets (System of Discrete Assets)

AnnotationAssertion(rdfs:isDefinedBy :systemOfDiscreteAssets "A system made up of interrelated discrete assets while not being a discrete asset itself, whose discrete asset parts are associated with lines or wireless signal.")
AnnotationAssertion(rdfs:label :systemOfDiscreteAssets "System of Discrete Assets")
AnnotationAssertion(rdfs:label :systemOfDiscreteAssets "System of Discrete Assets"@en)
SubClassOf(:systemOfDiscreteAssets :NavTree_015)
SubClassOf(:systemOfDiscreteAssets :system)

# Class: :systemTrain (System Train)

AnnotationAssertion(rdfs:comment :systemTrain "A system train has the characteristic of being set of connected assets that 
* is a part of a system
* exists among multiple similar sets of connected assets, functionally equivalent to itself, in the same system
is capable of realizing a unit of the system primary functions.")
AnnotationAssertion(rdfs:isDefinedBy :systemTrain "A component, among multiple functionally equivalent components of a regionalized system, that offers a unit of the complete set of primary functions of a regionalized system.")
AnnotationAssertion(rdfs:isDefinedBy :systemTrain "a part of a facility system consisting of a set of connected discrete assets that provides one unit, among multiple redundant units, of the primary functions of the facility system.")
AnnotationAssertion(rdfs:label :systemTrain "System Train")
SubClassOf(:systemTrain :flowIntegratedSystem)

# Class: :tableContent (table content)

AnnotationAssertion(rdfs:label :tableContent "table content"@en)
SubClassOf(:tableContent :pieceOfContent)

# Class: :tableSaw (:tableSaw)

SubClassOf(:tableSaw :machineShopTool)

# Class: :tankOrVessel (:tankOrVessel)

AnnotationAssertion(rdfs:comment :tankOrVessel "Jan'24: since vessel and tank are words often used interchangeably, they are combined here into a single term")
AnnotationAssertion(rdfs:comment :tankOrVessel "Mar 26 TH: the class tank and vessel is not place into the user classification navigation structure on purpose; If it appears there, it is likely to be misused to classify reactors and other assets that have a tank.")
SubClassOf(:tankOrVessel :discreteAsset)

# Class: :technicalStandard (technical standard)

AnnotationAssertion(rdfs:label :technicalStandard "technical standard"@en)
SubClassOf(:technicalStandard :contentSubject)

# Class: :temperatureInstrumentation (:temperatureInstrumentation)

SubClassOf(:temperatureInstrumentation :discreteAsset)
SubClassOf(:temperatureInstrumentation :singleParameterInstrumentation)

# Class: :temperatureSensingElement (:temperatureSensingElement)

SubClassOf(:temperatureSensingElement :NavTree_018)

# Class: :temperatureSwitch (:temperatureSwitch)

SubClassOf(:temperatureSwitch :NavTree_018)
SubClassOf(:temperatureSwitch :discreteAsset)

# Class: :temperatureTransmitter (:temperatureTransmitter)

SubClassOf(:temperatureTransmitter :NavTree_018)
SubClassOf(:temperatureTransmitter :discreteAsset)

# Class: :theMaxAllowableWorkingPressure (Maximum Allowable Working Pressure)

AnnotationAssertion(rdfs:label :theMaxAllowableWorkingPressure "Maximum Allowable Working Pressure")
SubClassOf(:theMaxAllowableWorkingPressure :aPressureDesc)

# Class: :theMaxAllowableWorkingTemp (Maxiumum Allowable Working Temperature)

AnnotationAssertion(rdfs:label :theMaxAllowableWorkingTemp "Maxiumum Allowable Working Temperature")
SubClassOf(:theMaxAllowableWorkingTemp :aTemperatureDesc)

# Class: :theMaxInputVoltageDesc (:theMaxInputVoltageDesc)

AnnotationAssertion(rdfs:comment :theMaxInputVoltageDesc "Maximum Input Voltage")
SubClassOf(:theMaxInputVoltageDesc :aVoltageDesc)

# Class: :theMinInputVoltageDesc (Mininum Input Voltage)

AnnotationAssertion(rdfs:label :theMinInputVoltageDesc "Mininum Input Voltage")
SubClassOf(:theMinInputVoltageDesc :aVoltageDesc)

# Class: :theNominalOutputPower (Nominal Output Power)

AnnotationAssertion(rdfs:label :theNominalOutputPower "Nominal Output Power")
SubClassOf(:theNominalOutputPower :aPowerDesc)

# Class: :theSubstanceInContainment (:theSubstanceInContainment)

SubClassOf(:theSubstanceInContainment :assetDescription)

# Class: :theVolumetricCapacityDesc (:theVolumetricCapacityDesc)

SubClassOf(:theVolumetricCapacityDesc :aVolumetricCapacityDesc)

# Class: :thermostatOrZoneControllerUnit (:thermostatOrZoneControllerUnit)

SubClassOf(:thermostatOrZoneControllerUnit :NavTree_006)
SubClassOf(:thermostatOrZoneControllerUnit :discreteAsset)

# Class: :thickener (:thickener)

SubClassOf(:thickener :NavTree_025)
SubClassOf(:thickener :discreteAsset)

# Class: :thickeningCentrifuge (:thickeningCentrifuge)

SubClassOf(:thickeningCentrifuge :centrifuge)
SubClassOf(:thickeningCentrifuge :thickener)

# Class: :tool (Tool)

AnnotationAssertion(rdfs:isDefinedBy :tool "A discrete asset that is not a part of a larger system; it is usually (but not necessarily) portable and operated by a single user when in use.")
AnnotationAssertion(rdfs:label :tool "Tool")
SubClassOf(:tool :discreteAsset)

# Class: :totalDissolvedSolidsInstrumentation (:totalDissolvedSolidsInstrumentation)

SubClassOf(:totalDissolvedSolidsInstrumentation :discreteAsset)
SubClassOf(:totalDissolvedSolidsInstrumentation :waterQualityInstrumentation)

# Class: :totalSuspendedSolidsInstrumentation (:totalSuspendedSolidsInstrumentation)

SubClassOf(:totalSuspendedSolidsInstrumentation :discreteAsset)
SubClassOf(:totalSuspendedSolidsInstrumentation :waterQualityInstrumentation)

# Class: :tower (:tower)

SubClassOf(:tower :NavTree_008)
SubClassOf(:tower :discreteAsset)

# Class: :transferSwitch (:transferSwitch)

SubClassOf(:transferSwitch :NavTree_005)
SubClassOf(:transferSwitch :discreteAsset)

# Class: :transformer (:transformer)

SubClassOf(:transformer :NavTree_005)
SubClassOf(:transformer :discreteAsset)

# Class: :trapPrimer (:trapPrimer)

SubClassOf(:trapPrimer :NavTree_010)
SubClassOf(:trapPrimer :discreteAsset)

# Class: :travelingScreenUnit (:travelingScreenUnit)

SubClassOf(:travelingScreenUnit :barScreenUnit)

# Class: :travellingBridgeCollector (:travellingBridgeCollector)

SubClassOf(:travellingBridgeCollector :collectorMecahanism)

# Class: :treatmentFilterCartridgeOrCassette (:treatmentFilterCartridgeOrCassette)

SubClassOf(:treatmentFilterCartridgeOrCassette :discreteAsset)
SubClassOf(:treatmentFilterCartridgeOrCassette :unitOfTreatmentFilterMedium)

# Class: :treatmentSeparator (:treatmentSeparator)

SubClassOf(:treatmentSeparator :separator)

# Class: :treePlantingSoilCell (:treePlantingSoilCell)

SubClassOf(:treePlantingSoilCell :NavTree_013)
SubClassOf(:treePlantingSoilCell :discreteAsset)

# Class: :tunnel (:tunnel)

SubClassOf(:tunnel :NavTree_008)
SubClassOf(:tunnel :discreteAsset)

# Class: :turbidityAnalyzer (:turbidityAnalyzer)

SubClassOf(:turbidityAnalyzer :discreteAsset)
SubClassOf(:turbidityAnalyzer :waterQualityInstrumentation)

# Class: :undergroundFuelOilTank_TEMP (:undergroundFuelOilTank_TEMP)

AnnotationAssertion(:notionMappingID :undergroundFuelOilTank_TEMP "f6a0886defb9495e8da78b897445275b")
EquivalentClasses(:undergroundFuelOilTank_TEMP ObjectIntersectionOf(:fuelOilTank DataHasValue(:isUnderGround "true"^^xsd:boolean)))

# Class: :undergroundFuelTank_TEMP (:undergroundFuelTank_TEMP)

AnnotationAssertion(:notionMappingID :undergroundFuelTank_TEMP "36c706f0a1524bc49f64b76bd1e184b5")
EquivalentClasses(:undergroundFuelTank_TEMP ObjectIntersectionOf(:fuelTank DataHasValue(:isUnderGround "true"^^xsd:boolean)))

# Class: :unitOfBioreactorMedium (:unitOfBioreactorMedium)

AnnotationAssertion(:classTree-excludeFromBranch :unitOfBioreactorMedium :unitOfTreatmentFilterMedium)
SubClassOf(:unitOfBioreactorMedium :reactorComponent)

# Class: :unitOfElectricalCurrent (:unitOfElectricalCurrent)

SubClassOf(:unitOfElectricalCurrent :unitOfMeasure)

# Class: :unitOfMass (:unitOfMass)

SubClassOf(:unitOfMass :unitOfMeasure)

# Class: :unitOfMeasure (unit of measure)

AnnotationAssertion(rdfs:label :unitOfMeasure "unit of measure"@en)
SubClassOf(:unitOfMeasure :informationContentEntity)

# Class: :unitOfPower (:unitOfPower)

SubClassOf(:unitOfPower :unitOfMeasure)

# Class: :unitOfPressure (:unitOfPressure)

SubClassOf(:unitOfPressure :unitOfMeasure)

# Class: :unitOfTreatmentFilterMedium (:unitOfTreatmentFilterMedium)

SubClassOf(:unitOfTreatmentFilterMedium :NavTree_021)

# Class: :unitOfVoltage (:unitOfVoltage)

SubClassOf(:unitOfVoltage :unitOfMeasure)

# Class: :vaccumCleaner (:vaccumCleaner)

SubClassOf(:vaccumCleaner :NavTree_014)
SubClassOf(:vaccumCleaner :discreteAsset)

# Class: :valve (valve)

AnnotationAssertion(rdfs:isDefinedBy :valve "A device for controlling the passage of fluid or air through a pipe.  The device is integrated into the pipe through a flanged, threaded, or wielded connection. 
The following are considered to be subclasses of valves
* solenoid, 
* check valve,
* backflow preventer,
* subtypes of pressure relief valve.")
AnnotationAssertion(rdfs:label :valve "valve"@en)
SubClassOf(:valve :NavTree_001)
SubClassOf(:valve :NavTree_002)
SubClassOf(:valve :NavTree_010)
SubClassOf(:valve :discreteAsset)
SubClassOf(:valve :flowOrPressureControlAsset)

# Class: :valveActuator (:valveActuator)

SubClassOf(:valveActuator :NavTree_009)
SubClassOf(:valveActuator :actuator)
SubClassOf(:valveActuator :flowOrPressureControlAsset)

# Class: :valveRole (valve role)

AnnotationAssertion(rdfs:label :valveRole "valve role"@en)
SubClassOf(:valveRole :assetRole)

# Class: :vapour (:vapour)

SubClassOf(:vapour :material)

# Class: :variableAirVolumeUnit (:variableAirVolumeUnit)

SubClassOf(:variableAirVolumeUnit :NavTree_006)
SubClassOf(:variableAirVolumeUnit :discreteAsset)

# Class: :ventilationSystem (:ventilationSystem)

AnnotationAssertion(:notionMappingID :ventilationSystem "a5d009d138a14963a62ee0d5753c6a74")
SubClassOf(:ventilationSystem :system)

# Class: :verticalLifeline (:verticalLifeline)

AnnotationAssertion(:notionMappingID :verticalLifeline "ac3fd2e6499d4797954dc714a796c3bc")
SubClassOf(:verticalLifeline :discreteAsset)
SubClassOf(:verticalLifeline :fallProtectionEquipment)

# Class: :vibratingConveyor (:vibratingConveyor)

SubClassOf(:vibratingConveyor :conveyor)

# Class: :vibrationAnalyzer (:vibrationAnalyzer)

SubClassOf(:vibrationAnalyzer :discreteAsset)

# Class: :vibrationInstrumentation (:vibrationInstrumentation)

SubClassOf(:vibrationInstrumentation :discreteAsset)
SubClassOf(:vibrationInstrumentation :singleParameterInstrumentation)

# Class: :voltageInstrumentation (:voltageInstrumentation)

SubClassOf(:voltageInstrumentation :discreteAsset)
SubClassOf(:voltageInstrumentation :electricalInstrumentation)

# Class: :voltageSurgeSuppressor (:voltageSurgeSuppressor)

SubClassOf(:voltageSurgeSuppressor :discreteAsset)
SubClassOf(:voltageSurgeSuppressor :electricalSafety)

# Class: :vortexClassifier (:vortexClassifier)

SubClassOf(:vortexClassifier :classifier)

# Class: :wasteGasBurner (:wasteGasBurner)

SubClassOf(:wasteGasBurner :burner)

# Class: :wastewaterStoragePipe (:wastewaterStoragePipe)

SubClassOf(:wastewaterStoragePipe :wetWeatherFlowStorage)

# Class: :water (:water)

SubClassOf(:water :liquid)

# Class: :waterQualityInstrumentation (:waterQualityInstrumentation)

SubClassOf(:waterQualityInstrumentation :singleParameterInstrumentation)

# Class: :waterServiceConnection (:waterServiceConnection)

SubClassOf(:waterServiceConnection :NavTree_002)

# Class: :waterTower (water tower)

AnnotationAssertion(rdfs:label :waterTower "water tower")
AnnotationAssertion(<http://www.w3.org/2004/02/skos/core#altLabel> :waterTower "elevated tank")
SubClassOf(:waterTower :discreteAsset)
SubClassOf(:waterTower :drinkingWaterStorage)

# Class: :waterTrailer (:waterTrailer)

SubClassOf(:waterTrailer :NavTree_011)
SubClassOf(:waterTrailer :discreteAsset)

# Class: :watermain (:watermain)

SubClassOf(:watermain :NavTree_002)
SubClassOf(:watermain :pipeSegment)

# Class: :weightScale (:weightScale)

SubClassOf(:weightScale :discreteAsset)
SubClassOf(:weightScale :singleParameterInstrumentation)

# Class: :weirStructure (:weirStructure)

SubClassOf(:weirStructure :NavTree_002)
SubClassOf(:weirStructure :discreteAsset)

# Class: :weldingReceptacle (:weldingReceptacle)

SubClassOf(:weldingReceptacle :NavTree_005)
SubClassOf(:weldingReceptacle :discreteAsset)

# Class: :well (:well)

SubClassOf(:well :NavTree_002)
SubClassOf(:well :discreteAsset)

# Class: :wetPond (:wetPond)

SubClassOf(:wetPond :pond)

# Class: :wetWeatherFlowStorage (wet weather flow storage)

AnnotationAssertion(rdfs:label :wetWeatherFlowStorage "wet weather flow storage"@en)
SubClassOf(:wetWeatherFlowStorage :NavTree_002)
SubClassOf(:wetWeatherFlowStorage :discreteAsset)

# Class: :wirelessAccessPoint (:wirelessAccessPoint)

SubClassOf(:wirelessAccessPoint :NavTree_012)
SubClassOf(:wirelessAccessPoint :discreteAsset)

# Class: :work (:work)

SubClassOf(:work :process)

# Class: :workOrderLevelWork (:workOrderLevelWork)

SubClassOf(:workOrderLevelWork :work)

# Class: :workOrderSpecification (work order specification)

AnnotationAssertion(rdfs:label :workOrderSpecification "work order specification")
SubClassOf(:workOrderSpecification :workSpecification)

# Class: :workSpecification (work specification)

AnnotationAssertion(rdfs:label :workSpecification "work specification")
SubClassOf(:workSpecification :description)

# Class: :wrench (:wrench)

SubClassOf(:wrench :NavTree_014)
SubClassOf(:wrench :discreteAsset)

# Class: :yard (:yard)

SubClassOf(:yard :facility)


############################
#   Named Individuals
############################

# Individual: :horsepower (hp)

AnnotationAssertion(rdfs:label :horsepower "hp")
ClassAssertion(:unitOfPower :horsepower)

# Individual: :kilopascal (kPa)

AnnotationAssertion(rdfs:label :kilopascal "kPa")
ClassAssertion(:unitOfPressure :kilopascal)

# Individual: :kilovolt (kV)

AnnotationAssertion(rdfs:label :kilovolt "kV")
ClassAssertion(:unitOfVoltage :kilovolt)

# Individual: :kilovolt-ampere (kVA)

AnnotationAssertion(rdfs:label :kilovolt-ampere "kVA")
ClassAssertion(:unitOfPower :kilovolt-ampere)

# Individual: :kilowatt (kW)

AnnotationAssertion(rdfs:label :kilowatt "kW")
ClassAssertion(:unitOfPower :kilowatt)

# Individual: :megavolt-ampere (MVA)

AnnotationAssertion(rdfs:label :megavolt-ampere "MVA")
ClassAssertion(:unitOfPower :megavolt-ampere)

# Individual: :megawatt (MW)

AnnotationAssertion(rdfs:label :megawatt "MW")
ClassAssertion(:unitOfPower :megawatt)

# Individual: :poundsPerSquareInch (pounds / square inch)

AnnotationAssertion(rdfs:label :poundsPerSquareInch "pounds / square inch")
ClassAssertion(:unitOfPressure :poundsPerSquareInch)

# Individual: :volt (V)

AnnotationAssertion(rdfs:label :volt "V")
ClassAssertion(:unitOfVoltage :volt)

# Individual: :volt-ampere (VA)

AnnotationAssertion(rdfs:label :volt-ampere "VA")
ClassAssertion(:unitOfPower :volt-ampere)

# Individual: :watt (W)

AnnotationAssertion(rdfs:label :watt "W")
ClassAssertion(:unitOfPower :watt)


SubClassOf(ObjectSomeValuesFrom(:hasPhysicalPart ObjectIntersectionOf(:discreteAsset :structuralTankComponent)) :structuralTank)
DisjointClasses(:asset :assetRole :informationContentEntity :material :organization :propertyState)
)