CONSTRUCT {
    ?shape ?p ?o .
    ?classOfUnits tw:hasInstance ?unitInstance .
    ?metaClassParentClass tw:hasInstance ?metaClassInstance . 
    ?UoM_property tw:shortcutsToInstance ?unitInstance . # 06/06
    ?metaClass_property tw:shortcutsToInstance ?metaClassInstance . # 06/14
    ?shape tw:shortcutsTo ?shortcutTarget_1 .
    tw:Boiler_defaultShape tw:shortcutsTo ?shortcutTarget_2 .
} 
WHERE {         
    { #6/4: I had to move this line out of the union block below, because of repetition issues.
        tw:Boiler_defaultShape sh:property ?shortcutTarget_2 .
    }
    UNION
    {
        { # Recursively traverse, from asset shape node (e.g. motor shape), to the end of the shape specification tree.
            tw:Boiler_defaultShape (sh:property|sh:node|sh:in|sh:or|sh:not|rdf:first|rdf:rest)+ ?shape . #|sh:in|sh:or|sh:not|rdf:first|rdf:rest
        } 
        UNION 
        { # Add the asset shape node to the shape specification tree too.
            BIND (tw:Boiler_defaultShape as ?shape)
        } 

    #----OUTERJOIN----
        
        {
            ?shape sh:node/sh:property ?shortcutTarget_1 .
        }
        UNION
        {   #Get all the properties, reachable from each node on the shape specification tree.
            ?shape ?p ?o .
            BIND(?shape AS ?s)
        } 
        UNION # 06/14
        {   
            ?shape ?p1 ?metaClass_property .
            ?metaClass_property sh:path tw:theMetaClass .
            ?metaClass_property sh:class ?metaClassParentClass .
            {
                ?metaClassInstance rdf:type ?metaClassParentClass . 
                #?metaClassInstance rdfs:subClassOf ?metaClassParentClass .  # a metaclass is both an instance and a subclass of thet parent class
                BIND(?metaClassInstance AS ?s)
                BIND(rdf:type AS ?p)
                BIND(?metaClassParentClass AS ?o)
            }
            UNION
            {
                ?metaClassInstance rdf:type ?metaClassParentClass ;
                        rdfs:label ?unitLabel . 
                #?metaClassInstance rdfs:subClassOf ?metaClassParentClass .  # a metaclass is both an instance and a subclass of thet parent class
                BIND(?metaClassInstance AS ?s)
                BIND(rdfs:label AS ?p)
                BIND(?unitLabel AS ?o)
            }
        } 
        UNION
        {   #Part of query for finding the type of measurement used used in the asset shape.
            ?shape ?p1 ?UoM_property .
            ?UoM_property sh:path tw:hasUnitOfMeasure . # locates the node on the UoM branch (as opposed to the numeric branch) of a measured quantity
            ?UoM_property sh:class ?classOfUnits .
            {   # Finds the UoM class, for example unitOfPowerMeasure
                ?unitInstance rdf:type ?classOfUnits .
                BIND(?unitInstance AS ?s)
                BIND(rdf:type AS ?p)
                BIND(?classOfUnits AS ?o)
            }
            UNION
            {   #Find the set of rdfs labels used for the UoM class (e.g. "kW" for unitOfPower) 
                ?unitInstance rdf:type ?classOfUnits ;
                                rdfs:label ?unitLabel .
                BIND(?unitInstance AS ?s)
                BIND(rdfs:label AS ?p)
                BIND(?unitLabel AS ?o)
            }
        } 
    }
}